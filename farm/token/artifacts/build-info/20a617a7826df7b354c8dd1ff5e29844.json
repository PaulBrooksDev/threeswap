{
	"id": "20a617a7826df7b354c8dd1ff5e29844",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"farm/token/BEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.4.0;\r\n\r\nimport '../interfaces/IBEP20.sol';\r\nimport '@openzeppelin/contracts/access/Ownable.sol';\r\nimport '@openzeppelin/contracts/utils/Context.sol';\r\nimport '../libraries/SafeMath.sol';\r\nimport '../libraries/Address.sol';\r\n\r\n/**\r\n * @dev Implementation of the {IBEP20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {BEP20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.zeppelin.solutions/t/how-to-implement-BEP20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin guidelines: functions revert instead\r\n * of returning `false` on failure. This behavior is nonetheless conventional\r\n * and does not conflict with the expectations of BEP20 applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IBEP20-approve}.\r\n */\r\ncontract BEP20 is Context, IBEP20, Ownable {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 private _decimals;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\r\n     * a default value of 18.\r\n     *\r\n     * To select a different value for {decimals}, use {_setupDecimals}.\r\n     *\r\n     * All three of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _decimals = 18;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external override view returns (address) {\r\n        return owner();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() public override view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() public override view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() public override view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-totalSupply}.\r\n     */\r\n    function totalSupply() public override view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public override view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public override view returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {BEP20};\r\n     *\r\n     * Requirements:\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for `sender`'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(\r\n            sender,\r\n            _msgSender(),\r\n            _allowances[sender][_msgSender()].sub(amount, 'BEP20: transfer amount exceeds allowance')\r\n        );\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {BEP20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {BEP20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender].sub(subtractedValue, 'BEP20: decreased allowance below zero')\r\n        );\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\r\n     * the total supply.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `msg.sender` must be the token owner\r\n     */\r\n    function mint(uint256 amount) public virtual onlyOwner returns (bool) {\r\n        _mint(_msgSender(), amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n     *\r\n     * This is internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal {\r\n        require(sender != address(0), 'BEP20: transfer from the zero address');\r\n        require(recipient != address(0), 'BEP20: transfer to the zero address');\r\n\r\n        _balances[sender] = _balances[sender].sub(amount, 'BEP20: transfer amount exceeds balance');\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal {\r\n        require(account != address(0), 'BEP20: mint to the zero address');\r\n\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[account] = _balances[account].add(amount);\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal {\r\n        require(account != address(0), 'BEP20: burn from the zero address');\r\n\r\n        _balances[account] = _balances[account].sub(amount, 'BEP20: burn amount exceeds balance');\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\r\n     *\r\n     * This is internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal {\r\n        require(owner != address(0), 'BEP20: approve from the zero address');\r\n        require(spender != address(0), 'BEP20: approve to the zero address');\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\r\n     * from the caller's allowance.\r\n     *\r\n     * See {_burn} and {_approve}.\r\n     */\r\n    function _burnFrom(address account, uint256 amount) internal {\r\n        _burn(account, amount);\r\n        _approve(\r\n            account,\r\n            _msgSender(),\r\n            _allowances[account][_msgSender()].sub(amount, 'BEP20: burn amount exceeds allowance')\r\n        );\r\n    }\r\n}\r\n"
			},
			"farm/libraries/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.6.6;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\r\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\r\n        // for accounts without code, i.e. `keccak256('')`\r\n        bytes32 codehash;\r\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly {\r\n            codehash := extcodehash(account)\r\n        }\r\n        return (codehash != accountHash && codehash != 0x0);\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, 'Address: insufficient balance');\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{value: amount}('');\r\n        require(success, 'Address: unable to send value, recipient may have reverted');\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, 'Address: low-level call failed');\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return _functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, 'Address: low-level call with value failed');\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, 'Address: insufficient balance for call');\r\n        return _functionCallWithValue(target, data, value, errorMessage);\r\n    }\r\n\r\n    function _functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 weiValue,\r\n        string memory errorMessage\r\n    ) private returns (bytes memory) {\r\n        require(isContract(target), 'Address: call to non-contract');\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{value: weiValue}(data);\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n"
			},
			"farm/libraries/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.4.0;\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, 'SafeMath: addition overflow');\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, 'SafeMath: subtraction overflow');\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, 'SafeMath: multiplication overflow');\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, 'SafeMath: division by zero');\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, 'SafeMath: modulo by zero');\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n\r\n    function min(uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        z = x < y ? x : y;\r\n    }\r\n\r\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\r\n    function sqrt(uint256 y) internal pure returns (uint256 z) {\r\n        if (y > 3) {\r\n            z = y;\r\n            uint256 x = y / 2 + 1;\r\n            while (x < z) {\r\n                z = x;\r\n                x = (y / x + x) / 2;\r\n            }\r\n        } else if (y != 0) {\r\n            z = 1;\r\n        }\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"farm/interfaces/IBEP20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.4.0;\r\n\r\ninterface IBEP20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"farm/interfaces/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"farm/interfaces/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"farm/interfaces/IBEP20.sol\":{\"keccak256\":\"0xfe677ab1ec28d2dcd54f8e4933c9b53542ff3e60b6f5dfd56d58e671b4bf8959\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b544c8ba83be8de1e26f8c5b43e7c941ba0773048122831144cfbbcaa152a675\",\"dweb:/ipfs/QmSNVvJ8SrKXyqJ8wkqnNudegjDFkx1QFQFeXkAnUDDKtU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"farm/libraries/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"farm/libraries/Address.sol\":134:6392  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"farm/libraries/Address.sol\":134:6392  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206e4474adbeba36247d6fb3b399ed8b95afd7a4e03b7d62aba86defc289f31b3c64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206e4474adbeba36247d6fb3b399ed8b95afd7a4e03b7d62aba86defc289f31b3c64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x4474ADBEBA36247D6FB3B399ED8B95 0xAF 0xD7 LOG4 0xE0 EXTCODESIZE PUSH30 0x62ABA86DEFC289F31B3C64736F6C63430008070033000000000000000000 ",
							"sourceMap": "134:6258:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;134:6258:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206e4474adbeba36247d6fb3b399ed8b95afd7a4e03b7d62aba86defc289f31b3c64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x4474ADBEBA36247D6FB3B399ED8B95 0xAF 0xD7 LOG4 0xE0 EXTCODESIZE PUSH30 0x62ABA86DEFC289F31B3C64736F6C63430008070033000000000000000000 ",
							"sourceMap": "134:6258:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 6392,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 134,
									"end": 6392,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206e4474adbeba36247d6fb3b399ed8b95afd7a4e03b7d62aba86defc289f31b3c64736f6c63430008070033",
									".code": [
										{
											"begin": 134,
											"end": 6392,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 134,
											"end": 6392,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 134,
											"end": 6392,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 134,
											"end": 6392,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 6392,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 6392,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 134,
											"end": 6392,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 6392,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 134,
											"end": 6392,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"farm/libraries/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"farm/libraries/Address.sol\":{\"keccak256\":\"0xfebb27f1f403898e2f9f8f6948b88632ab84d4b1cb82c535e5907588b8a1a0b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80598ad995e6b420fcb04919b4c0504e72a4fba39f6da86d339644faa31c5f99\",\"dweb:/ipfs/QmRD6kfjet5SAB3ZCustCXQphagSuGUtwpEXiJ6Vue6TTE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"farm/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"farm/libraries/SafeMath.sol\":640:6004  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"farm/libraries/SafeMath.sol\":640:6004  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ad8abc22aed745b6da81b6c4d61e3bed24eb94c3e0470ec8c432efd36ed2a45e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ad8abc22aed745b6da81b6c4d61e3bed24eb94c3e0470ec8c432efd36ed2a45e64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD DUP11 0xBC 0x22 0xAE 0xD7 GASLIMIT 0xB6 0xDA DUP2 0xB6 0xC4 0xD6 0x1E EXTCODESIZE 0xED 0x24 0xEB SWAP5 0xC3 0xE0 SELFBALANCE 0xE 0xC8 0xC4 ORIGIN 0xEF 0xD3 PUSH15 0xD2A45E64736F6C6343000807003300 ",
							"sourceMap": "640:5364:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;640:5364:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ad8abc22aed745b6da81b6c4d61e3bed24eb94c3e0470ec8c432efd36ed2a45e64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD DUP11 0xBC 0x22 0xAE 0xD7 GASLIMIT 0xB6 0xDA DUP2 0xB6 0xC4 0xD6 0x1E EXTCODESIZE 0xED 0x24 0xEB SWAP5 0xC3 0xE0 SELFBALANCE 0xE 0xC8 0xC4 ORIGIN 0xEF 0xD3 PUSH15 0xD2A45E64736F6C6343000807003300 ",
							"sourceMap": "640:5364:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sqrt(uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 640,
									"end": 6004,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 640,
									"end": 6004,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ad8abc22aed745b6da81b6c4d61e3bed24eb94c3e0470ec8c432efd36ed2a45e64736f6c63430008070033",
									".code": [
										{
											"begin": 640,
											"end": 6004,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 640,
											"end": 6004,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 640,
											"end": 6004,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 640,
											"end": 6004,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 640,
											"end": 6004,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 640,
											"end": 6004,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 640,
											"end": 6004,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 6004,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 640,
											"end": 6004,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"farm/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"farm/libraries/SafeMath.sol\":{\"keccak256\":\"0x9ed09430799b39e964ba0a2c16d93e6ef107338413cdbdbc2837ee7440706447\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e941b0d3fdbd6e8c803ff762c6ff4aef6a0c3cb4023ffd939c6f7fec138f2d0\",\"dweb:/ipfs/QmXsbw7m5SrbYvYkP8wRRu1zcVGJbj7m6xwnWg2XbugLLA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"farm/token/BEP20.sol": {
				"BEP20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IBEP20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {BEP20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-BEP20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of BEP20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IBEP20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"farm/token/BEP20.sol\":1468:10381  contract BEP20 is Context, IBEP20, Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"farm/token/BEP20.sol\":2165:2306  constructor(string memory name_, string memory symbol_) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"farm/token/BEP20.sol\":2232:2245  _name = name_ */\n  dup2\n  mload\n  tag_12\n  swap1\n    /* \"farm/token/BEP20.sol\":2232:2237  _name */\n  0x04\n  swap1\n    /* \"farm/token/BEP20.sol\":2232:2245  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"farm/token/BEP20.sol\":2256:2273  _symbol = symbol_ */\n  dup1\n  mload\n  tag_14\n  swap1\n    /* \"farm/token/BEP20.sol\":2256:2263  _symbol */\n  0x05\n  swap1\n    /* \"farm/token/BEP20.sol\":2256:2273  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_13\n  jump\t// in\ntag_14:\n  pop\n  pop\n    /* \"farm/token/BEP20.sol\":2284:2293  _decimals */\n  0x06\n    /* \"farm/token/BEP20.sol\":2284:2298  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"farm/token/BEP20.sol\":2296:2298  18 */\n  0x12\n    /* \"farm/token/BEP20.sol\":2284:2298  _decimals = 18 */\n  or\n  swap1\n  sstore\n  pop\n    /* \"farm/token/BEP20.sol\":1468:10381  contract BEP20 is Context, IBEP20, Ownable {\r... */\n  jump(tag_29)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"farm/token/BEP20.sol\":1468:10381  contract BEP20 is Context, IBEP20, Ownable {\r... */\ntag_13:\n  dup3\n  dup1\n  sload\n  tag_18\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_21\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_24)\ntag_21:\n  dup3\n  0x1f\n  lt\n  tag_22\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_24)\ntag_22:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_24\n  jumpi\n  swap2\n  dup3\n  add\ntag_23:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_24\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_23)\ntag_24:\n  pop\n  tag_25\n  swap3\n  swap2\n  pop\n  tag_26\n  jump\t// in\ntag_25:\n  pop\n  swap1\n  jump\t// out\ntag_26:\ntag_27:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_25\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_27)\n    /* \"#utility.yul\":14:899   */\ntag_30:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:143   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:143   */\ntag_32:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:257   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_34\n  tag_35\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:476   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_37\n  tag_35\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:619   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:619   */\ntag_38:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_39:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_39)\ntag_41:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:869   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:869   */\ntag_42:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":14:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1084   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1084   */\ntag_44:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1203   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1203   */\ntag_45:\n    /* \"#utility.yul\":1222:1283   */\n  tag_46\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_30\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1378   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1378   */\ntag_47:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_48\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_30\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":904:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1851   */\ntag_19:\n    /* \"#utility.yul\":1550:1551   */\n  0x01\n    /* \"#utility.yul\":1546:1558   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1593:1605   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1614:1675   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1668:1672   */\n  0x7f\n    /* \"#utility.yul\":1660:1666   */\n  dup3\n    /* \"#utility.yul\":1656:1673   */\n  and\n    /* \"#utility.yul\":1646:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1675   */\ntag_50:\n    /* \"#utility.yul\":1721:1723   */\n  0x20\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1710:1724   */\n  lt\n    /* \"#utility.yul\":1690:1708   */\n  dup2\n    /* \"#utility.yul\":1687:1725   */\n  eq\n    /* \"#utility.yul\":1684:1845   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1767:1777   */\n  0x4e487b71\n    /* \"#utility.yul\":1762:1765   */\n  0xe0\n    /* \"#utility.yul\":1758:1778   */\n  shl\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1779   */\n  mstore\n    /* \"#utility.yul\":1802:1806   */\n  0x22\n    /* \"#utility.yul\":1799:1800   */\n  0x04\n    /* \"#utility.yul\":1792:1807   */\n  mstore\n    /* \"#utility.yul\":1830:1834   */\n  0x24\n    /* \"#utility.yul\":1827:1828   */\n  0x00\n    /* \"#utility.yul\":1820:1835   */\n  revert\n    /* \"#utility.yul\":1684:1845   */\ntag_51:\n  pop\n    /* \"#utility.yul\":1471:1851   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1856:1983   */\ntag_35:\n    /* \"#utility.yul\":1917:1927   */\n  0x4e487b71\n    /* \"#utility.yul\":1912:1915   */\n  0xe0\n    /* \"#utility.yul\":1908:1928   */\n  shl\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1898:1929   */\n  mstore\n    /* \"#utility.yul\":1948:1952   */\n  0x41\n    /* \"#utility.yul\":1945:1946   */\n  0x04\n    /* \"#utility.yul\":1938:1953   */\n  mstore\n    /* \"#utility.yul\":1972:1976   */\n  0x24\n    /* \"#utility.yul\":1969:1970   */\n  0x00\n    /* \"#utility.yul\":1962:1977   */\n  revert\n    /* \"#utility.yul\":1856:1983   */\ntag_29:\n    /* \"farm/token/BEP20.sol\":1468:10381  contract BEP20 is Context, IBEP20, Ownable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"farm/token/BEP20.sol\":1468:10381  contract BEP20 is Context, IBEP20, Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x893d20e8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"farm/token/BEP20.sol\":2531:2623  function name() public override view returns (string memory) {\r... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"farm/token/BEP20.sol\":4018:4179  function approve(address spender, uint256 amount) public override returns (bool) {\r... */\n    tag_4:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":1798:1812   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1791:1813   */\n      iszero\n        /* \"#utility.yul\":1773:1814   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1761:1763   */\n      0x20\n        /* \"#utility.yul\":1746:1764   */\n      add\n        /* \"farm/token/BEP20.sol\":4018:4179  function approve(address spender, uint256 amount) public override returns (bool) {\r... */\n      tag_24\n        /* \"#utility.yul\":1633:1820   */\n      jump\n        /* \"farm/token/BEP20.sol\":3007:3107  function totalSupply() public override view returns (uint256) {\r... */\n    tag_5:\n        /* \"farm/token/BEP20.sol\":3087:3099  _totalSupply */\n      sload(0x03)\n        /* \"farm/token/BEP20.sol\":3007:3107  function totalSupply() public override view returns (uint256) {\r... */\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":5675:5700   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5663:5665   */\n      0x20\n        /* \"#utility.yul\":5648:5666   */\n      add\n        /* \"farm/token/BEP20.sol\":3007:3107  function totalSupply() public override view returns (uint256) {\r... */\n      tag_24\n        /* \"#utility.yul\":5529:5706   */\n      jump\n        /* \"farm/token/BEP20.sol\":4650:5047  function transferFrom(\r... */\n    tag_6:\n      tag_26\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n        /* \"farm/token/BEP20.sol\":2690:2782  function decimals() public override view returns (uint8) {\r... */\n    tag_7:\n        /* \"farm/token/BEP20.sol\":2765:2774  _decimals */\n      sload(0x06)\n        /* \"farm/token/BEP20.sol\":2690:2782  function decimals() public override view returns (uint8) {\r... */\n      mload(0x40)\n        /* \"farm/token/BEP20.sol\":2765:2774  _decimals */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5853:5889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5841:5843   */\n      0x20\n        /* \"#utility.yul\":5826:5844   */\n      add\n        /* \"farm/token/BEP20.sol\":2690:2782  function decimals() public override view returns (uint8) {\r... */\n      tag_24\n        /* \"#utility.yul\":5711:5895   */\n      jump\n        /* \"farm/token/BEP20.sol\":5455:5665  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_8:\n      tag_26\n      tag_46\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n        /* \"farm/token/BEP20.sol\":3169:3288  function balanceOf(address account) public override view returns (uint256) {\r... */\n    tag_9:\n      tag_32\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"farm/token/BEP20.sol\":3262:3280  _balances[account] */\n      and\n        /* \"farm/token/BEP20.sol\":3235:3242  uint256 */\n      0x00\n        /* \"farm/token/BEP20.sol\":3262:3280  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"farm/token/BEP20.sol\":3262:3271  _balances */\n      0x01\n        /* \"farm/token/BEP20.sol\":3262:3280  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"farm/token/BEP20.sol\":3169:3288  function balanceOf(address account) public override view returns (uint256) {\r... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      stop\n        /* \"farm/token/BEP20.sol\":2374:2468  function getOwner() external override view returns (address) {\r... */\n    tag_11:\n        /* \"farm/token/BEP20.sol\":2426:2433  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"farm/token/BEP20.sol\":2374:2468  function getOwner() external override view returns (address) {\r... */\n    tag_56:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1589:1621   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1571:1622   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1559:1561   */\n      0x20\n        /* \"#utility.yul\":1544:1562   */\n      add\n        /* \"farm/token/BEP20.sol\":2374:2468  function getOwner() external override view returns (address) {\r... */\n      tag_24\n        /* \"#utility.yul\":1425:1628   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_56)\n        /* \"farm/token/BEP20.sol\":2847:2943  function symbol() public override view returns (string memory) {\r... */\n    tag_13:\n      tag_22\n      tag_64\n      jump\t// in\n        /* \"farm/token/BEP20.sol\":6696:6834  function mint(uint256 amount) public virtual onlyOwner returns (bool) {\r... */\n    tag_14:\n      tag_26\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n        /* \"farm/token/BEP20.sol\":6167:6478  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_15:\n      tag_26\n      tag_72\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"farm/token/BEP20.sol\":3500:3667  function transfer(address recipient, uint256 amount) public override returns (bool) {\r... */\n    tag_16:\n      tag_26\n      tag_76\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n        /* \"farm/token/BEP20.sol\":3729:3872  function allowance(address owner, address spender) public override view returns (uint256) {\r... */\n    tag_17:\n      tag_32\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"farm/token/BEP20.sol\":3837:3855  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"farm/token/BEP20.sol\":3810:3817  uint256 */\n      0x00\n        /* \"farm/token/BEP20.sol\":3837:3855  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"farm/token/BEP20.sol\":3837:3848  _allowances */\n      0x02\n        /* \"farm/token/BEP20.sol\":3837:3855  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"farm/token/BEP20.sol\":3837:3864  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"farm/token/BEP20.sol\":3729:3872  function allowance(address owner, address spender) public override view returns (uint256) {\r... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_54\n      tag_85\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"farm/token/BEP20.sol\":2531:2623  function name() public override view returns (string memory) {\r... */\n    tag_23:\n        /* \"farm/token/BEP20.sol\":2577:2590  string memory */\n      0x60\n        /* \"farm/token/BEP20.sol\":2610:2615  _name */\n      0x04\n        /* \"farm/token/BEP20.sol\":2603:2615  return _name */\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_89\n      jump\t// in\n    tag_90:\n      dup1\n      iszero\n      tag_91\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_92\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_91)\n    tag_92:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_93:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_93\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"farm/token/BEP20.sol\":2531:2623  function name() public override view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"farm/token/BEP20.sol\":4018:4179  function approve(address spender, uint256 amount) public override returns (bool) {\r... */\n    tag_29:\n        /* \"farm/token/BEP20.sol\":4093:4097  bool */\n      0x00\n        /* \"farm/token/BEP20.sol\":4110:4149  _approve(_msgSender(), spender, amount) */\n      tag_95\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"farm/token/BEP20.sol\":4133:4140  spender */\n      dup5\n        /* \"farm/token/BEP20.sol\":4142:4148  amount */\n      dup5\n        /* \"farm/token/BEP20.sol\":4110:4118  _approve */\n      tag_98\n        /* \"farm/token/BEP20.sol\":4110:4149  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_95:\n      pop\n        /* \"farm/token/BEP20.sol\":4167:4171  true */\n      0x01\n        /* \"farm/token/BEP20.sol\":4018:4179  function approve(address spender, uint256 amount) public override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"farm/token/BEP20.sol\":4650:5047  function transferFrom(\r... */\n    tag_39:\n        /* \"farm/token/BEP20.sol\":4782:4786  bool */\n      0x00\n        /* \"farm/token/BEP20.sol\":4799:4835  _transfer(sender, recipient, amount) */\n      tag_101\n        /* \"farm/token/BEP20.sol\":4809:4815  sender */\n      dup5\n        /* \"farm/token/BEP20.sol\":4817:4826  recipient */\n      dup5\n        /* \"farm/token/BEP20.sol\":4828:4834  amount */\n      dup5\n        /* \"farm/token/BEP20.sol\":4799:4808  _transfer */\n      tag_102\n        /* \"farm/token/BEP20.sol\":4799:4835  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_101:\n        /* \"farm/token/BEP20.sol\":4846:5017  _approve(\r... */\n      tag_103\n        /* \"farm/token/BEP20.sol\":4869:4875  sender */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"farm/token/BEP20.sol\":4917:5006  _allowances[sender][_msgSender()].sub(amount, 'BEP20: transfer amount exceeds allowance') */\n      tag_105\n        /* \"farm/token/BEP20.sol\":4955:4961  amount */\n      dup6\n        /* \"farm/token/BEP20.sol\":4917:5006  _allowances[sender][_msgSender()].sub(amount, 'BEP20: transfer amount exceeds allowance') */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"farm/token/BEP20.sol\":4917:4936  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"farm/token/BEP20.sol\":4917:4928  _allowances */\n      0x02\n        /* \"farm/token/BEP20.sol\":4917:4936  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"farm/token/BEP20.sol\":4917:4950  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"farm/token/BEP20.sol\":4917:4954  _allowances[sender][_msgSender()].sub */\n      tag_107\n        /* \"farm/token/BEP20.sol\":4917:5006  _allowances[sender][_msgSender()].sub(amount, 'BEP20: transfer amount exceeds allowance') */\n      jump\t// in\n    tag_105:\n        /* \"farm/token/BEP20.sol\":4846:4854  _approve */\n      tag_98\n        /* \"farm/token/BEP20.sol\":4846:5017  _approve(\r... */\n      jump\t// in\n    tag_103:\n      pop\n        /* \"farm/token/BEP20.sol\":5035:5039  true */\n      0x01\n        /* \"farm/token/BEP20.sol\":4650:5047  function transferFrom(\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"farm/token/BEP20.sol\":5455:5665  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_47:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"farm/token/BEP20.sol\":5535:5539  bool */\n      0x00\n        /* \"farm/token/BEP20.sol\":5584:5609  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"farm/token/BEP20.sol\":5584:5595  _allowances */\n      0x02\n        /* \"farm/token/BEP20.sol\":5584:5609  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"farm/token/BEP20.sol\":5584:5618  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"farm/token/BEP20.sol\":5535:5539  bool */\n      swap1\n      swap2\n        /* \"farm/token/BEP20.sol\":5552:5635  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_95\n      swap2\n        /* \"farm/token/BEP20.sol\":5575:5582  spender */\n      dup6\n      swap1\n        /* \"farm/token/BEP20.sol\":5584:5634  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_105\n      swap1\n        /* \"farm/token/BEP20.sol\":5623:5633  addedValue */\n      dup7\n        /* \"farm/token/BEP20.sol\":5584:5622  _allowances[_msgSender()][spender].add */\n      tag_114\n        /* \"farm/token/BEP20.sol\":5584:5634  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"farm/token/BEP20.sol\":2847:2943  function symbol() public override view returns (string memory) {\r... */\n    tag_64:\n        /* \"farm/token/BEP20.sol\":2895:2908  string memory */\n      0x60\n        /* \"farm/token/BEP20.sol\":2928:2935  _symbol */\n      0x05\n        /* \"farm/token/BEP20.sol\":2921:2935  return _symbol */\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n        /* \"farm/token/BEP20.sol\":6696:6834  function mint(uint256 amount) public virtual onlyOwner returns (bool) {\r... */\n    tag_69:\n        /* \"farm/token/BEP20.sol\":6760:6764  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_132:\n        /* \"farm/token/BEP20.sol\":6777:6804  _mint(_msgSender(), amount) */\n      tag_134\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"farm/token/BEP20.sol\":6797:6803  amount */\n      dup4\n        /* \"farm/token/BEP20.sol\":6777:6782  _mint */\n      tag_136\n        /* \"farm/token/BEP20.sol\":6777:6804  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_134:\n      pop\n        /* \"farm/token/BEP20.sol\":6822:6826  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1117:1118  _ */\n    tag_133:\n        /* \"farm/token/BEP20.sol\":6696:6834  function mint(uint256 amount) public virtual onlyOwner returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"farm/token/BEP20.sol\":6167:6478  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_73:\n        /* \"farm/token/BEP20.sol\":6252:6256  bool */\n      0x00\n        /* \"farm/token/BEP20.sol\":6269:6448  _approve(\r... */\n      tag_95\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"farm/token/BEP20.sol\":6319:6326  spender */\n      dup5\n        /* \"farm/token/BEP20.sol\":6341:6437  _allowances[_msgSender()][spender].sub(subtractedValue, 'BEP20: decreased allowance below zero') */\n      tag_105\n        /* \"farm/token/BEP20.sol\":6380:6395  subtractedValue */\n      dup6\n        /* \"farm/token/BEP20.sol\":6341:6437  _allowances[_msgSender()][spender].sub(subtractedValue, 'BEP20: decreased allowance below zero') */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"farm/token/BEP20.sol\":6341:6366  _allowances[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"farm/token/BEP20.sol\":6341:6352  _allowances */\n      0x02\n        /* \"farm/token/BEP20.sol\":6341:6366  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"farm/token/BEP20.sol\":6341:6375  _allowances[_msgSender()][spender] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"farm/token/BEP20.sol\":6341:6379  _allowances[_msgSender()][spender].sub */\n      tag_107\n        /* \"farm/token/BEP20.sol\":6341:6437  _allowances[_msgSender()][spender].sub(subtractedValue, 'BEP20: decreased allowance below zero') */\n      jump\t// in\n        /* \"farm/token/BEP20.sol\":3500:3667  function transfer(address recipient, uint256 amount) public override returns (bool) {\r... */\n    tag_77:\n        /* \"farm/token/BEP20.sol\":3578:3582  bool */\n      0x00\n        /* \"farm/token/BEP20.sol\":3595:3637  _transfer(_msgSender(), recipient, amount) */\n      tag_95\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"farm/token/BEP20.sol\":3619:3628  recipient */\n      dup5\n        /* \"farm/token/BEP20.sol\":3630:3636  amount */\n      dup5\n        /* \"farm/token/BEP20.sol\":3595:3604  _transfer */\n      tag_102\n        /* \"farm/token/BEP20.sol\":3595:3637  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3440:3442   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3422:3443   */\n      mstore\n        /* \"#utility.yul\":3479:3481   */\n      0x26\n        /* \"#utility.yul\":3459:3477   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3452:3482   */\n      mstore\n        /* \"#utility.yul\":3518:3552   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":3498:3516   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3491:3553   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":3569:3587   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3562:3598   */\n      mstore\n        /* \"#utility.yul\":3615:3634   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"farm/token/BEP20.sol\":9538:9910  function _approve(\r... */\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"farm/token/BEP20.sol\":9666:9685  owner != address(0) */\n      dup4\n      and\n        /* \"farm/token/BEP20.sol\":9658:9726  require(owner != address(0), 'BEP20: approve from the zero address') */\n      tag_155\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3035:3037   */\n      0x20\n        /* \"farm/token/BEP20.sol\":9658:9726  require(owner != address(0), 'BEP20: approve from the zero address') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3017:3038   */\n      mstore\n        /* \"#utility.yul\":3074:3076   */\n      0x24\n        /* \"#utility.yul\":3054:3072   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3047:3077   */\n      mstore\n        /* \"#utility.yul\":3113:3147   */\n      0x42455032303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3093:3111   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3086:3148   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3164:3182   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3157:3191   */\n      mstore\n        /* \"#utility.yul\":3208:3227   */\n      0x84\n      add\n        /* \"farm/token/BEP20.sol\":9658:9726  require(owner != address(0), 'BEP20: approve from the zero address') */\n      tag_150\n        /* \"#utility.yul\":2833:3233   */\n      jump\n        /* \"farm/token/BEP20.sol\":9658:9726  require(owner != address(0), 'BEP20: approve from the zero address') */\n    tag_155:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"farm/token/BEP20.sol\":9745:9766  spender != address(0) */\n      dup3\n      and\n        /* \"farm/token/BEP20.sol\":9737:9805  require(spender != address(0), 'BEP20: approve to the zero address') */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5328:5330   */\n      0x20\n        /* \"farm/token/BEP20.sol\":9737:9805  require(spender != address(0), 'BEP20: approve to the zero address') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5310:5331   */\n      mstore\n        /* \"#utility.yul\":5367:5369   */\n      0x22\n        /* \"#utility.yul\":5347:5365   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5340:5370   */\n      mstore\n        /* \"#utility.yul\":5406:5440   */\n      0x42455032303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":5386:5404   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5379:5441   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":5457:5475   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5450:5482   */\n      mstore\n        /* \"#utility.yul\":5499:5518   */\n      0x84\n      add\n        /* \"farm/token/BEP20.sol\":9737:9805  require(spender != address(0), 'BEP20: approve to the zero address') */\n      tag_150\n        /* \"#utility.yul\":5126:5524   */\n      jump\n        /* \"farm/token/BEP20.sol\":9737:9805  require(spender != address(0), 'BEP20: approve to the zero address') */\n    tag_158:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"farm/token/BEP20.sol\":9818:9836  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"farm/token/BEP20.sol\":9818:9829  _allowances */\n      0x02\n        /* \"farm/token/BEP20.sol\":9818:9836  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"farm/token/BEP20.sol\":9818:9845  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"farm/token/BEP20.sol\":9818:9854  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"farm/token/BEP20.sol\":9870:9902  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":5675:5700   */\n      dup5\n      dup2\n      mstore\n        /* \"farm/token/BEP20.sol\":9870:9902  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":5648:5666   */\n      add\n        /* \"farm/token/BEP20.sol\":9870:9902  Approval(owner, spender, amount) */\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"farm/token/BEP20.sol\":9538:9910  function _approve(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"farm/token/BEP20.sol\":7324:7829  function _transfer(\r... */\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"farm/token/BEP20.sol\":7456:7476  sender != address(0) */\n      dup4\n      and\n        /* \"farm/token/BEP20.sol\":7448:7518  require(sender != address(0), 'BEP20: transfer from the zero address') */\n      tag_163\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2629:2631   */\n      0x20\n        /* \"farm/token/BEP20.sol\":7448:7518  require(sender != address(0), 'BEP20: transfer from the zero address') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2611:2632   */\n      mstore\n        /* \"#utility.yul\":2668:2670   */\n      0x25\n        /* \"#utility.yul\":2648:2666   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2641:2671   */\n      mstore\n        /* \"#utility.yul\":2707:2741   */\n      0x42455032303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":2687:2705   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2680:2742   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":2758:2776   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2751:2786   */\n      mstore\n        /* \"#utility.yul\":2803:2822   */\n      0x84\n      add\n        /* \"farm/token/BEP20.sol\":7448:7518  require(sender != address(0), 'BEP20: transfer from the zero address') */\n      tag_150\n        /* \"#utility.yul\":2427:2828   */\n      jump\n        /* \"farm/token/BEP20.sol\":7448:7518  require(sender != address(0), 'BEP20: transfer from the zero address') */\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"farm/token/BEP20.sol\":7537:7560  recipient != address(0) */\n      dup3\n      and\n        /* \"farm/token/BEP20.sol\":7529:7600  require(recipient != address(0), 'BEP20: transfer to the zero address') */\n      tag_166\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4924:4926   */\n      0x20\n        /* \"farm/token/BEP20.sol\":7529:7600  require(recipient != address(0), 'BEP20: transfer to the zero address') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4906:4927   */\n      mstore\n        /* \"#utility.yul\":4963:4965   */\n      0x23\n        /* \"#utility.yul\":4943:4961   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4936:4966   */\n      mstore\n        /* \"#utility.yul\":5002:5036   */\n      0x42455032303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":4982:5000   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4975:5037   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5053:5071   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5046:5079   */\n      mstore\n        /* \"#utility.yul\":5096:5115   */\n      0x84\n      add\n        /* \"farm/token/BEP20.sol\":7529:7600  require(recipient != address(0), 'BEP20: transfer to the zero address') */\n      tag_150\n        /* \"#utility.yul\":4722:5121   */\n      jump\n        /* \"farm/token/BEP20.sol\":7529:7600  require(recipient != address(0), 'BEP20: transfer to the zero address') */\n    tag_166:\n        /* \"farm/token/BEP20.sol\":7633:7704  _balances[sender].sub(amount, 'BEP20: transfer amount exceeds balance') */\n      tag_169\n        /* \"farm/token/BEP20.sol\":7655:7661  amount */\n      dup2\n        /* \"farm/token/BEP20.sol\":7633:7704  _balances[sender].sub(amount, 'BEP20: transfer amount exceeds balance') */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"farm/token/BEP20.sol\":7633:7650  _balances[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"farm/token/BEP20.sol\":7633:7642  _balances */\n      0x01\n        /* \"farm/token/BEP20.sol\":7633:7650  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"farm/token/BEP20.sol\":7633:7704  _balances[sender].sub(amount, 'BEP20: transfer amount exceeds balance') */\n      swap1\n        /* \"farm/token/BEP20.sol\":7633:7654  _balances[sender].sub */\n      tag_107\n        /* \"farm/token/BEP20.sol\":7633:7704  _balances[sender].sub(amount, 'BEP20: transfer amount exceeds balance') */\n      jump\t// in\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"farm/token/BEP20.sol\":7613:7630  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"farm/token/BEP20.sol\":7613:7622  _balances */\n      0x01\n        /* \"farm/token/BEP20.sol\":7613:7630  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"farm/token/BEP20.sol\":7613:7704  _balances[sender] = _balances[sender].sub(amount, 'BEP20: transfer amount exceeds balance') */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"farm/token/BEP20.sol\":7738:7758  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"farm/token/BEP20.sol\":7738:7770  _balances[recipient].add(amount) */\n      tag_170\n      swap1\n        /* \"farm/token/BEP20.sol\":7763:7769  amount */\n      dup3\n        /* \"farm/token/BEP20.sol\":7738:7762  _balances[recipient].add */\n      tag_114\n        /* \"farm/token/BEP20.sol\":7738:7770  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"farm/token/BEP20.sol\":7715:7735  _balances[recipient] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"farm/token/BEP20.sol\":7715:7724  _balances */\n      0x01\n        /* \"farm/token/BEP20.sol\":7715:7735  _balances[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"farm/token/BEP20.sol\":7715:7770  _balances[recipient] = _balances[recipient].add(amount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"farm/token/BEP20.sol\":7786:7821  Transfer(sender, recipient, amount) */\n      swap2\n      mload\n      swap1\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_161\n      swap1\n        /* \"farm/token/BEP20.sol\":7814:7820  amount */\n      dup6\n        /* \"#utility.yul\":5675:5700   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5663:5665   */\n      0x20\n        /* \"#utility.yul\":5648:5666   */\n      add\n      swap1\n        /* \"#utility.yul\":5529:5706   */\n      jump\n        /* \"farm/libraries/SafeMath.sol\":1806:2032  function sub(\r... */\n    tag_107:\n        /* \"farm/libraries/SafeMath.sol\":1926:1933  uint256 */\n      0x00\n        /* \"farm/libraries/SafeMath.sol\":1962:1974  errorMessage */\n      dup2\n        /* \"farm/libraries/SafeMath.sol\":1954:1960  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"farm/libraries/SafeMath.sol\":1946:1975  require(b <= a, errorMessage) */\n      tag_173\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_173:\n      pop\n        /* \"farm/libraries/SafeMath.sol\":1986:1995  uint256 c */\n      0x00\n        /* \"farm/libraries/SafeMath.sol\":1998:2003  a - b */\n      tag_175\n        /* \"farm/libraries/SafeMath.sol\":2002:2003  b */\n      dup5\n        /* \"farm/libraries/SafeMath.sol\":1998:1999  a */\n      dup7\n        /* \"farm/libraries/SafeMath.sol\":1998:2003  a - b */\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"farm/libraries/SafeMath.sol\":1986:2003  uint256 c = a - b */\n      swap6\n        /* \"farm/libraries/SafeMath.sol\":1806:2032  function sub(\r... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"farm/libraries/SafeMath.sol\":903:1084  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_114:\n        /* \"farm/libraries/SafeMath.sol\":961:968  uint256 */\n      0x00\n      dup1\n        /* \"farm/libraries/SafeMath.sol\":993:998  a + b */\n      tag_178\n        /* \"farm/libraries/SafeMath.sol\":997:998  b */\n      dup4\n        /* \"farm/libraries/SafeMath.sol\":993:994  a */\n      dup6\n        /* \"farm/libraries/SafeMath.sol\":993:998  a + b */\n      tag_179\n      jump\t// in\n    tag_178:\n        /* \"farm/libraries/SafeMath.sol\":981:998  uint256 c = a + b */\n      swap1\n      pop\n        /* \"farm/libraries/SafeMath.sol\":1022:1023  a */\n      dup4\n        /* \"farm/libraries/SafeMath.sol\":1017:1018  c */\n      dup2\n        /* \"farm/libraries/SafeMath.sol\":1017:1023  c >= a */\n      lt\n      iszero\n        /* \"farm/libraries/SafeMath.sol\":1009:1055  require(c >= a, 'SafeMath: addition overflow') */\n      tag_180\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3847:3849   */\n      0x20\n        /* \"farm/libraries/SafeMath.sol\":1009:1055  require(c >= a, 'SafeMath: addition overflow') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3829:3850   */\n      mstore\n        /* \"#utility.yul\":3886:3888   */\n      0x1b\n        /* \"#utility.yul\":3866:3884   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3859:3889   */\n      mstore\n        /* \"#utility.yul\":3925:3954   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":3905:3923   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3898:3955   */\n      mstore\n        /* \"#utility.yul\":3972:3990   */\n      0x64\n      add\n        /* \"farm/libraries/SafeMath.sol\":1009:1055  require(c >= a, 'SafeMath: addition overflow') */\n      tag_150\n        /* \"#utility.yul\":3645:3996   */\n      jump\n        /* \"farm/libraries/SafeMath.sol\":1009:1055  require(c >= a, 'SafeMath: addition overflow') */\n    tag_180:\n        /* \"farm/libraries/SafeMath.sol\":1075:1076  c */\n      swap4\n        /* \"farm/libraries/SafeMath.sol\":903:1084  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4563:4565   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4545:4566   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4582:4600   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4575:4605   */\n      mstore\n        /* \"#utility.yul\":4641:4675   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4621:4639   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4614:4676   */\n      mstore\n        /* \"#utility.yul\":4693:4711   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_150\n        /* \"#utility.yul\":4361:4717   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"farm/token/BEP20.sol\":8110:8418  function _mint(address account, uint256 amount) internal {\r... */\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"farm/token/BEP20.sol\":8186:8207  account != address(0) */\n      dup3\n      and\n        /* \"farm/token/BEP20.sol\":8178:8243  require(account != address(0), 'BEP20: mint to the zero address') */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4203:4205   */\n      0x20\n        /* \"farm/token/BEP20.sol\":8178:8243  require(account != address(0), 'BEP20: mint to the zero address') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4185:4206   */\n      mstore\n        /* \"#utility.yul\":4242:4244   */\n      0x1f\n        /* \"#utility.yul\":4222:4240   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4215:4245   */\n      mstore\n        /* \"#utility.yul\":4281:4314   */\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":4261:4279   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4254:4315   */\n      mstore\n        /* \"#utility.yul\":4332:4350   */\n      0x64\n      add\n        /* \"farm/token/BEP20.sol\":8178:8243  require(account != address(0), 'BEP20: mint to the zero address') */\n      tag_150\n        /* \"#utility.yul\":4001:4356   */\n      jump\n        /* \"farm/token/BEP20.sol\":8178:8243  require(account != address(0), 'BEP20: mint to the zero address') */\n    tag_191:\n        /* \"farm/token/BEP20.sol\":8271:8283  _totalSupply */\n      sload(0x03)\n        /* \"farm/token/BEP20.sol\":8271:8295  _totalSupply.add(amount) */\n      tag_194\n      swap1\n        /* \"farm/token/BEP20.sol\":8288:8294  amount */\n      dup3\n        /* \"farm/token/BEP20.sol\":8271:8287  _totalSupply.add */\n      tag_114\n        /* \"farm/token/BEP20.sol\":8271:8295  _totalSupply.add(amount) */\n      jump\t// in\n    tag_194:\n        /* \"farm/token/BEP20.sol\":8256:8268  _totalSupply */\n      0x03\n        /* \"farm/token/BEP20.sol\":8256:8295  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"farm/token/BEP20.sol\":8327:8345  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"farm/token/BEP20.sol\":8327:8336  _balances */\n      0x01\n        /* \"farm/token/BEP20.sol\":8327:8345  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"farm/token/BEP20.sol\":8327:8357  _balances[account].add(amount) */\n      tag_195\n      swap1\n        /* \"farm/token/BEP20.sol\":8350:8356  amount */\n      dup3\n        /* \"farm/token/BEP20.sol\":8327:8349  _balances[account].add */\n      tag_114\n        /* \"farm/token/BEP20.sol\":8327:8357  _balances[account].add(amount) */\n      jump\t// in\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"farm/token/BEP20.sol\":8306:8324  _balances[account] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"farm/token/BEP20.sol\":8306:8315  _balances */\n      0x01\n        /* \"farm/token/BEP20.sol\":8306:8324  _balances[account] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"farm/token/BEP20.sol\":8306:8357  _balances[account] = _balances[account].add(amount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"farm/token/BEP20.sol\":8373:8410  Transfer(address(0), account, amount) */\n      swap2\n      mload\n        /* \"farm/token/BEP20.sol\":8306:8324  _balances[account] */\n      swap1\n      swap2\n      swap1\n        /* \"farm/token/BEP20.sol\":8373:8410  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_196\n      swap1\n        /* \"farm/token/BEP20.sol\":8403:8409  amount */\n      dup6\n        /* \"#utility.yul\":5675:5700   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5663:5665   */\n      0x20\n        /* \"#utility.yul\":5648:5666   */\n      add\n      swap1\n        /* \"#utility.yul\":5529:5706   */\n      jump\n        /* \"farm/token/BEP20.sol\":8373:8410  Transfer(address(0), account, amount) */\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"farm/token/BEP20.sol\":8110:8418  function _mint(address account, uint256 amount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_198:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_133\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":192:378   */\n    tag_51:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_202:\n        /* \"#utility.yul\":343:372   */\n      tag_180\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_198\n      jump\t// in\n        /* \"#utility.yul\":383:643   */\n    tag_81:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_205:\n        /* \"#utility.yul\":551:580   */\n      tag_206\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_198\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_207\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_198\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_38:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_209:\n        /* \"#utility.yul\":833:862   */\n      tag_210\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_198\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_211\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_198\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:1235   */\n    tag_28:\n        /* \"#utility.yul\":1049:1055   */\n      0x00\n        /* \"#utility.yul\":1057:1063   */\n      dup1\n        /* \"#utility.yul\":1110:1112   */\n      0x40\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1089:1096   */\n      dup6\n        /* \"#utility.yul\":1085:1108   */\n      sub\n        /* \"#utility.yul\":1081:1113   */\n      slt\n        /* \"#utility.yul\":1078:1130   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":1126:1127   */\n      0x00\n        /* \"#utility.yul\":1123:1124   */\n      dup1\n        /* \"#utility.yul\":1116:1128   */\n      revert\n        /* \"#utility.yul\":1078:1130   */\n    tag_213:\n        /* \"#utility.yul\":1149:1178   */\n      tag_214\n        /* \"#utility.yul\":1168:1177   */\n      dup4\n        /* \"#utility.yul\":1149:1178   */\n      tag_198\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":1139:1178   */\n      swap5\n        /* \"#utility.yul\":1225:1227   */\n      0x20\n        /* \"#utility.yul\":1210:1228   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1197:1229   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:1235   */\n      jump\t// out\n        /* \"#utility.yul\":1240:1420   */\n    tag_68:\n        /* \"#utility.yul\":1299:1305   */\n      0x00\n        /* \"#utility.yul\":1352:1354   */\n      0x20\n        /* \"#utility.yul\":1340:1349   */\n      dup3\n        /* \"#utility.yul\":1331:1338   */\n      dup5\n        /* \"#utility.yul\":1327:1350   */\n      sub\n        /* \"#utility.yul\":1323:1355   */\n      slt\n        /* \"#utility.yul\":1320:1372   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":1368:1369   */\n      0x00\n        /* \"#utility.yul\":1365:1366   */\n      dup1\n        /* \"#utility.yul\":1358:1370   */\n      revert\n        /* \"#utility.yul\":1320:1372   */\n    tag_216:\n      pop\n        /* \"#utility.yul\":1391:1414   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1240:1420   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1825:2422   */\n    tag_25:\n        /* \"#utility.yul\":1937:1941   */\n      0x00\n        /* \"#utility.yul\":1966:1968   */\n      0x20\n        /* \"#utility.yul\":1995:1997   */\n      dup1\n        /* \"#utility.yul\":1984:1993   */\n      dup4\n        /* \"#utility.yul\":1977:1998   */\n      mstore\n        /* \"#utility.yul\":2027:2033   */\n      dup4\n        /* \"#utility.yul\":2021:2034   */\n      mload\n        /* \"#utility.yul\":2070:2076   */\n      dup1\n        /* \"#utility.yul\":2065:2067   */\n      dup3\n        /* \"#utility.yul\":2054:2063   */\n      dup6\n        /* \"#utility.yul\":2050:2068   */\n      add\n        /* \"#utility.yul\":2043:2077   */\n      mstore\n        /* \"#utility.yul\":2095:2096   */\n      0x00\n        /* \"#utility.yul\":2105:2245   */\n    tag_220:\n        /* \"#utility.yul\":2119:2125   */\n      dup2\n        /* \"#utility.yul\":2116:2117   */\n      dup2\n        /* \"#utility.yul\":2113:2126   */\n      lt\n        /* \"#utility.yul\":2105:2245   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":2214:2228   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":2210:2233   */\n      dup4\n      add\n        /* \"#utility.yul\":2204:2234   */\n      mload\n        /* \"#utility.yul\":2180:2197   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":2199:2201   */\n      0x40\n        /* \"#utility.yul\":2176:2202   */\n      add\n        /* \"#utility.yul\":2169:2235   */\n      mstore\n        /* \"#utility.yul\":2134:2144   */\n      dup3\n      add\n        /* \"#utility.yul\":2105:2245   */\n      jump(tag_220)\n    tag_222:\n        /* \"#utility.yul\":2263:2269   */\n      dup2\n        /* \"#utility.yul\":2260:2261   */\n      dup2\n        /* \"#utility.yul\":2257:2270   */\n      gt\n        /* \"#utility.yul\":2254:2345   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":2333:2334   */\n      0x00\n        /* \"#utility.yul\":2328:2330   */\n      0x40\n        /* \"#utility.yul\":2319:2325   */\n      dup4\n        /* \"#utility.yul\":2308:2317   */\n      dup8\n        /* \"#utility.yul\":2304:2326   */\n      add\n        /* \"#utility.yul\":2300:2331   */\n      add\n        /* \"#utility.yul\":2293:2335   */\n      mstore\n        /* \"#utility.yul\":2254:2345   */\n    tag_223:\n      pop\n        /* \"#utility.yul\":2406:2408   */\n      0x1f\n        /* \"#utility.yul\":2385:2400   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2381:2410   */\n      and\n        /* \"#utility.yul\":2366:2411   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2413:2415   */\n      0x40\n        /* \"#utility.yul\":2362:2416   */\n      add\n      swap4\n        /* \"#utility.yul\":1825:2422   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5900:6028   */\n    tag_179:\n        /* \"#utility.yul\":5940:5943   */\n      0x00\n        /* \"#utility.yul\":5971:5972   */\n      dup3\n        /* \"#utility.yul\":5967:5973   */\n      not\n        /* \"#utility.yul\":5964:5965   */\n      dup3\n        /* \"#utility.yul\":5961:5974   */\n      gt\n        /* \"#utility.yul\":5958:5997   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":5977:5995   */\n      tag_236\n      tag_237\n      jump\t// in\n    tag_236:\n      pop\n        /* \"#utility.yul\":6013:6022   */\n      add\n      swap1\n        /* \"#utility.yul\":5900:6028   */\n      jump\t// out\n        /* \"#utility.yul\":6033:6158   */\n    tag_176:\n        /* \"#utility.yul\":6073:6077   */\n      0x00\n        /* \"#utility.yul\":6101:6102   */\n      dup3\n        /* \"#utility.yul\":6098:6099   */\n      dup3\n        /* \"#utility.yul\":6095:6103   */\n      lt\n        /* \"#utility.yul\":6092:6126   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":6106:6124   */\n      tag_240\n      tag_237\n      jump\t// in\n    tag_240:\n      pop\n        /* \"#utility.yul\":6143:6152   */\n      sub\n      swap1\n        /* \"#utility.yul\":6033:6158   */\n      jump\t// out\n        /* \"#utility.yul\":6163:6543   */\n    tag_89:\n        /* \"#utility.yul\":6242:6243   */\n      0x01\n        /* \"#utility.yul\":6238:6250   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6285:6297   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6306:6367   */\n      tag_242\n      jumpi\n        /* \"#utility.yul\":6360:6364   */\n      0x7f\n        /* \"#utility.yul\":6352:6358   */\n      dup3\n        /* \"#utility.yul\":6348:6365   */\n      and\n        /* \"#utility.yul\":6338:6365   */\n      swap2\n      pop\n        /* \"#utility.yul\":6306:6367   */\n    tag_242:\n        /* \"#utility.yul\":6413:6415   */\n      0x20\n        /* \"#utility.yul\":6405:6411   */\n      dup3\n        /* \"#utility.yul\":6402:6416   */\n      lt\n        /* \"#utility.yul\":6382:6400   */\n      dup2\n        /* \"#utility.yul\":6379:6417   */\n      eq\n        /* \"#utility.yul\":6376:6537   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":6459:6469   */\n      0x4e487b71\n        /* \"#utility.yul\":6454:6457   */\n      0xe0\n        /* \"#utility.yul\":6450:6470   */\n      shl\n        /* \"#utility.yul\":6447:6448   */\n      0x00\n        /* \"#utility.yul\":6440:6471   */\n      mstore\n        /* \"#utility.yul\":6494:6498   */\n      0x22\n        /* \"#utility.yul\":6491:6492   */\n      0x04\n        /* \"#utility.yul\":6484:6499   */\n      mstore\n        /* \"#utility.yul\":6522:6526   */\n      0x24\n        /* \"#utility.yul\":6519:6520   */\n      0x00\n        /* \"#utility.yul\":6512:6527   */\n      revert\n        /* \"#utility.yul\":6376:6537   */\n    tag_243:\n      pop\n        /* \"#utility.yul\":6163:6543   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6548:6675   */\n    tag_237:\n        /* \"#utility.yul\":6609:6619   */\n      0x4e487b71\n        /* \"#utility.yul\":6604:6607   */\n      0xe0\n        /* \"#utility.yul\":6600:6620   */\n      shl\n        /* \"#utility.yul\":6597:6598   */\n      0x00\n        /* \"#utility.yul\":6590:6621   */\n      mstore\n        /* \"#utility.yul\":6640:6644   */\n      0x11\n        /* \"#utility.yul\":6637:6638   */\n      0x04\n        /* \"#utility.yul\":6630:6645   */\n      mstore\n        /* \"#utility.yul\":6664:6668   */\n      0x24\n        /* \"#utility.yul\":6661:6662   */\n      0x00\n        /* \"#utility.yul\":6654:6669   */\n      revert\n    stop\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa264697066735822122011af7b644709141e82006cfe5dcb2ed1ee09cc1c1ad2bb8ecba0ccea3bcde99764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_767": {
									"entryPoint": null,
									"id": 767,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 128,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 724,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:6"
															},
															"nodeType": "YulIf",
															"src": "88:55:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:6"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:6"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:6"
															},
															"nodeType": "YulIf",
															"src": "221:36:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:6"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:6",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:6"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:6"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:6",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:6"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:6"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:6"
															},
															"nodeType": "YulIf",
															"src": "404:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:6"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:6"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:6"
															},
															"nodeType": "YulIf",
															"src": "566:53:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:6"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:6"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:6"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:6",
																"statements": []
															},
															"src": "647:133:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:6"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:6"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:6"
															},
															"nodeType": "YulIf",
															"src": "789:80:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:6",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:6",
														"type": ""
													}
												],
												"src": "14:885:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:6"
															},
															"nodeType": "YulIf",
															"src": "1032:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:6"
															},
															"nodeType": "YulIf",
															"src": "1169:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:6"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:6"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:6"
															},
															"nodeType": "YulIf",
															"src": "1342:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:6"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:6",
														"type": ""
													}
												],
												"src": "904:562:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1597:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1571:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1646:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1660:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1624:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:26:6"
															},
															"nodeType": "YulIf",
															"src": "1614:61:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1762:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1767:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1758:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1758:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1802:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1792:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1690:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1710:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:38:6"
															},
															"nodeType": "YulIf",
															"src": "1684:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1506:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1515:6:6",
														"type": ""
													}
												],
												"src": "1471:380:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1917:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1856:127:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000f2138038062000f2183398101604081905262000034916200022d565b6200003f3362000080565b815162000054906004906020850190620000d0565b5080516200006a906005906020840190620000d0565b50506006805460ff1916601217905550620002ea565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620000de9062000297565b90600052602060002090601f0160209004810192826200010257600085556200014d565b82601f106200011d57805160ff19168380011785556200014d565b828001600101855582156200014d579182015b828111156200014d57825182559160200191906001019062000130565b506200015b9291506200015f565b5090565b5b808211156200015b576000815560010162000160565b600082601f8301126200018857600080fd5b81516001600160401b0380821115620001a557620001a5620002d4565b604051601f8301601f19908116603f01168101908282118183101715620001d057620001d0620002d4565b81604052838152602092508683858801011115620001ed57600080fd5b600091505b83821015620002115785820183015181830184015290820190620001f2565b83821115620002235760008385830101525b9695505050505050565b600080604083850312156200024157600080fd5b82516001600160401b03808211156200025957600080fd5b620002678683870162000176565b935060208501519150808211156200027e57600080fd5b506200028d8582860162000176565b9150509250929050565b600181811c90821680620002ac57607f821691505b60208210811415620002ce57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610c2780620002fa6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d714610217578063a9059cbb1461022a578063dd62ed3e1461023d578063f2fde38b1461027657600080fd5b8063893d20e8146101c65780638da5cb5b146101eb57806395d89b41146101fc578063a0712d681461020457600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461018057806370a0823114610193578063715018a6146101bc57600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610289565b60405161011a9190610aa9565b60405180910390f35b610136610131366004610a66565b61031b565b604051901515815260200161011a565b6003545b60405190815260200161011a565b610136610166366004610a2a565b610331565b60065460405160ff909116815260200161011a565b61013661018e366004610a66565b61039a565b61014a6101a13660046109dc565b6001600160a01b031660009081526001602052604090205490565b6101c46103d0565b005b6000546001600160a01b03165b6040516001600160a01b03909116815260200161011a565b6000546001600160a01b03166101d3565b61010d6103e4565b610136610212366004610a90565b6103f3565b610136610225366004610a66565b610410565b610136610238366004610a66565b61045f565b61014a61024b3660046109f7565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101c46102843660046109dc565b61046c565b60606004805461029890610b2d565b80601f01602080910402602001604051908101604052809291908181526020018280546102c490610b2d565b80156103115780601f106102e657610100808354040283529160200191610311565b820191906000526020600020905b8154815290600101906020018083116102f457829003601f168201915b5050505050905090565b60006103283384846104ea565b50600192915050565b600061033e84848461060f565b610390843361038b85604051806060016040528060288152602001610b7f602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610795565b6104ea565b5060019392505050565b3360008181526002602090815260408083206001600160a01b0387168452909152812054909161032891859061038b90866107cf565b6103d8610835565b6103e2600061088f565b565b60606005805461029890610b2d565b60006103fd610835565b61040733836108df565b5060015b919050565b6000610328338461038b85604051806060016040528060258152602001610bcd602591393360009081526002602090815260408083206001600160a01b038d1684529091529020549190610795565b600061032833848461060f565b610474610835565b6001600160a01b0381166104de5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6104e78161088f565b50565b6001600160a01b03831661054c5760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104d5565b6001600160a01b0382166105ad5760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104d5565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166106735760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104d5565b6001600160a01b0382166106d55760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104d5565b61071281604051806060016040528060268152602001610ba7602691396001600160a01b0386166000908152600160205260409020549190610795565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461074190826107cf565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106029085815260200190565b600081848411156107b95760405162461bcd60e51b81526004016104d59190610aa9565b5060006107c68486610b16565b95945050505050565b6000806107dc8385610afe565b90508381101561082e5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104d5565b9392505050565b6000546001600160a01b031633146103e25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104d5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0382166109355760405162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104d5565b60035461094290826107cf565b6003556001600160a01b03821660009081526001602052604090205461096890826107cf565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109b99085815260200190565b60405180910390a35050565b80356001600160a01b038116811461040b57600080fd5b6000602082840312156109ee57600080fd5b61082e826109c5565b60008060408385031215610a0a57600080fd5b610a13836109c5565b9150610a21602084016109c5565b90509250929050565b600080600060608486031215610a3f57600080fd5b610a48846109c5565b9250610a56602085016109c5565b9150604084013590509250925092565b60008060408385031215610a7957600080fd5b610a82836109c5565b946020939093013593505050565b600060208284031215610aa257600080fd5b5035919050565b600060208083528351808285015260005b81811015610ad657858101830151858201604001528201610aba565b81811115610ae8576000604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610b1157610b11610b68565b500190565b600082821015610b2857610b28610b68565b500390565b600181811c90821680610b4157607f821691505b60208210811415610b6257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122011af7b644709141e82006cfe5dcb2ed1ee09cc1c1ad2bb8ecba0ccea3bcde99764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xF21 CODESIZE SUB DUP1 PUSH3 0xF21 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x22D JUMP JUMPDEST PUSH3 0x3F CALLER PUSH3 0x80 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x54 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0xD0 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x6A SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xD0 JUMP JUMPDEST POP POP PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xDE SWAP1 PUSH3 0x297 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x102 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x14D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x11D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x14D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x14D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x14D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x130 JUMP JUMPDEST POP PUSH3 0x15B SWAP3 SWAP2 POP PUSH3 0x15F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x15B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x160 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1A5 JUMPI PUSH3 0x1A5 PUSH3 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x1D0 JUMPI PUSH3 0x1D0 PUSH3 0x2D4 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x211 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1F2 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x223 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x267 DUP7 DUP4 DUP8 ADD PUSH3 0x176 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x28D DUP6 DUP3 DUP7 ADD PUSH3 0x176 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2AC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2CE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xC27 DUP1 PUSH3 0x2FA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0xA66 JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0xA2A JUMP JUMPDEST PUSH2 0x331 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0xA66 JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x3D0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x3E4 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0xA90 JUMP JUMPDEST PUSH2 0x3F3 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0xA66 JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x238 CALLDATASIZE PUSH1 0x4 PUSH2 0xA66 JUMP JUMPDEST PUSH2 0x45F JUMP JUMPDEST PUSH2 0x14A PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DC JUMP JUMPDEST PUSH2 0x46C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x298 SWAP1 PUSH2 0xB2D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2C4 SWAP1 PUSH2 0xB2D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x311 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2E6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x311 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x328 CALLER DUP5 DUP5 PUSH2 0x4EA JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33E DUP5 DUP5 DUP5 PUSH2 0x60F JUMP JUMPDEST PUSH2 0x390 DUP5 CALLER PUSH2 0x38B DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB7F PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x795 JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x328 SWAP2 DUP6 SWAP1 PUSH2 0x38B SWAP1 DUP7 PUSH2 0x7CF JUMP JUMPDEST PUSH2 0x3D8 PUSH2 0x835 JUMP JUMPDEST PUSH2 0x3E2 PUSH1 0x0 PUSH2 0x88F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x298 SWAP1 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FD PUSH2 0x835 JUMP JUMPDEST PUSH2 0x407 CALLER DUP4 PUSH2 0x8DF JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x328 CALLER DUP5 PUSH2 0x38B DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBCD PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x795 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x328 CALLER DUP5 DUP5 PUSH2 0x60F JUMP JUMPDEST PUSH2 0x474 PUSH2 0x835 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E7 DUP2 PUSH2 0x88F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x673 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4D5 JUMP JUMPDEST PUSH2 0x712 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBA7 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x795 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x741 SWAP1 DUP3 PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x602 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x7B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x7C6 DUP5 DUP7 PUSH2 0xB16 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7DC DUP4 DUP6 PUSH2 0xAFE JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x82E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x942 SWAP1 DUP3 PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x968 SWAP1 DUP3 PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x9B9 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x82E DUP3 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA13 DUP4 PUSH2 0x9C5 JUMP JUMPDEST SWAP2 POP PUSH2 0xA21 PUSH1 0x20 DUP5 ADD PUSH2 0x9C5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA48 DUP5 PUSH2 0x9C5 JUMP JUMPDEST SWAP3 POP PUSH2 0xA56 PUSH1 0x20 DUP6 ADD PUSH2 0x9C5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA82 DUP4 PUSH2 0x9C5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAD6 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xABA JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xAE8 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xB11 JUMPI PUSH2 0xB11 PUSH2 0xB68 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xB28 JUMPI PUSH2 0xB28 PUSH2 0xB68 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xB41 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xB62 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 GT 0xAF PUSH28 0x644709141E82006CFE5DCB2ED1EE09CC1C1AD2BB8ECBA0CCEA3BCDE9 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1468:8913:5:-:0;;;2165:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:1;936:18:0;:32::i;:::-;2232:13:5;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2256:17:5;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2284:9:5;:14;;-1:-1:-1;;2284:14:5;2296:2;2284:14;;;-1:-1:-1;1468:8913:5;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1468:8913:5:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1468:8913:5;;;-1:-1:-1;1468:8913:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:6;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:6;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:6;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:6:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:6;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;1468:8913:5;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1204": {
									"entryPoint": 1258,
									"id": 1204,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 2101,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_1112": {
									"entryPoint": 2271,
									"id": 1112,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": null,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 2191,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1066": {
									"entryPoint": 1551,
									"id": 1066,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_468": {
									"entryPoint": 1999,
									"id": 468,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_871": {
									"entryPoint": null,
									"id": 871,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_892": {
									"entryPoint": 795,
									"id": 892,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_832": {
									"entryPoint": null,
									"id": 832,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_798": {
									"entryPoint": null,
									"id": 798,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_987": {
									"entryPoint": 1040,
									"id": 987,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getOwner_778": {
									"entryPoint": null,
									"id": 778,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increaseAllowance_958": {
									"entryPoint": 922,
									"id": 958,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_1006": {
									"entryPoint": 1011,
									"id": 1006,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_788": {
									"entryPoint": 649,
									"id": 788,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 976,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_513": {
									"entryPoint": 1941,
									"id": 513,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_808": {
									"entryPoint": 996,
									"id": 808,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_818": {
									"entryPoint": null,
									"id": 818,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_930": {
									"entryPoint": 817,
									"id": 930,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 1132,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_853": {
									"entryPoint": 1119,
									"id": 853,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2920,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6677:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:6"
															},
															"nodeType": "YulIf",
															"src": "111:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:6",
														"type": ""
													}
												],
												"src": "14:173:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:6"
															},
															"nodeType": "YulIf",
															"src": "272:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:6",
														"type": ""
													}
												],
												"src": "192:186:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:6"
															},
															"nodeType": "YulIf",
															"src": "480:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:6",
														"type": ""
													}
												],
												"src": "383:260:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:6"
															},
															"nodeType": "YulIf",
															"src": "762:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:6",
														"type": ""
													}
												],
												"src": "648:328:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1068:167:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1114:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1089:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1081:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:32:6"
															},
															"nodeType": "YulIf",
															"src": "1078:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1139:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1168:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1149:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1187:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1214:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1225:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1197:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1197:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1026:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1037:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1057:6:6",
														"type": ""
													}
												],
												"src": "981:254:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1310:110:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1356:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1365:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1368:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1358:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1358:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1358:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1331:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1340:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1327:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1327:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1352:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1323:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1323:32:6"
															},
															"nodeType": "YulIf",
															"src": "1320:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1381:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1404:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1391:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1381:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1276:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1287:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1299:6:6",
														"type": ""
													}
												],
												"src": "1240:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1548:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1559:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1536:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1578:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1593:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1609:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1614:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1605:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1605:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1618:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1601:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1601:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1589:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1589:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1571:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1571:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1571:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1495:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1506:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1517:4:6",
														"type": ""
													}
												],
												"src": "1425:203:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1728:92:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1738:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1750:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1746:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1746:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1738:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1780:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1805:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1798:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1798:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1791:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1791:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1773:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1773:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1773:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1697:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1708:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1719:4:6",
														"type": ""
													}
												],
												"src": "1633:187:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1946:476:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1956:12:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1966:2:6",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1960:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1984:9:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1995:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1977:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1977:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1977:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2007:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2027:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2021:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2021:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2011:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2054:9:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2065:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2050:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2050:18:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2070:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2043:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2043:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2043:34:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2086:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2095:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2090:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2155:90:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2184:9:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2195:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2180:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2180:17:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2199:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2176:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2176:26:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "2218:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2226:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2214:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2214:14:6"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "2230:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2210:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2210:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2204:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2204:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2169:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2169:66:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2169:66:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2116:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2119:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2113:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2113:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2127:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2129:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2138:1:6"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2141:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2134:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2134:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2129:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2109:3:6",
																"statements": []
															},
															"src": "2105:140:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2279:66:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2308:9:6"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "2319:6:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2304:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2304:22:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2300:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2300:31:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2333:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2293:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2293:42:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2293:42:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2260:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2263:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2257:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2257:13:6"
															},
															"nodeType": "YulIf",
															"src": "2254:91:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2354:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2370:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2389:6:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2397:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2385:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2385:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2406:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2402:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2402:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2381:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2381:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2366:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2366:45:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2413:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2362:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2362:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2354:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1915:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1926:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1937:4:6",
														"type": ""
													}
												],
												"src": "1825:597:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2601:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2618:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2629:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2611:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2611:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2611:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2663:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2648:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2648:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2668:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2641:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2641:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2641:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2691:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2702:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2687:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2687:18:6"
																	},
																	{
																		"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2707:34:6",
																		"type": "",
																		"value": "BEP20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2680:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2680:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2680:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2762:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2773:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2758:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2758:18:6"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2778:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2751:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2751:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2751:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2795:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2807:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2818:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2803:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2803:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2795:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2578:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2592:4:6",
														"type": ""
													}
												],
												"src": "2427:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3007:226:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3024:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3035:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3017:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3017:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3017:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3058:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3069:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3054:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3054:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3074:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3047:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3047:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3047:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3097:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3108:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3093:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3093:18:6"
																	},
																	{
																		"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3113:34:6",
																		"type": "",
																		"value": "BEP20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3086:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3086:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3086:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3168:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3179:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3164:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3164:18:6"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3184:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3157:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3157:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3157:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3200:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3212:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3223:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3208:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3208:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3200:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2984:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2998:4:6",
														"type": ""
													}
												],
												"src": "2833:400:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3412:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3429:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3440:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3422:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3422:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3422:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3463:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3474:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3459:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3459:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3479:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3452:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3452:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3452:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3502:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3513:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3498:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3498:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3518:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3491:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3491:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3491:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3573:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3584:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3569:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3569:18:6"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3589:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3562:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3562:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3562:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3607:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3619:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3630:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3615:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3615:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3607:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3389:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3403:4:6",
														"type": ""
													}
												],
												"src": "3238:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3819:177:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3836:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3847:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3829:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3829:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3829:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3870:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3881:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3866:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3866:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3886:2:6",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3859:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3859:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3859:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3909:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3920:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3905:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3905:18:6"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3925:29:6",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3898:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:57:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3898:57:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3964:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3976:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3987:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3972:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3972:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3964:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3796:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3810:4:6",
														"type": ""
													}
												],
												"src": "3645:351:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4175:181:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4192:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4203:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4185:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4185:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4185:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4226:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4237:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4222:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4222:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4242:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4215:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4215:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4215:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4265:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4276:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4261:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4261:18:6"
																	},
																	{
																		"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4281:33:6",
																		"type": "",
																		"value": "BEP20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4254:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4254:61:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4254:61:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4324:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4336:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4347:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4332:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4332:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4324:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4152:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4166:4:6",
														"type": ""
													}
												],
												"src": "4001:355:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4535:182:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4552:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4563:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4545:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4545:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4545:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4586:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4597:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4582:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4582:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4602:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4575:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4575:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4575:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4625:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4636:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4621:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4621:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4641:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4614:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4614:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4614:62:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4685:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4697:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4708:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4693:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4693:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4685:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4512:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4526:4:6",
														"type": ""
													}
												],
												"src": "4361:356:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4896:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4913:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4924:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4906:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4906:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4906:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4947:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4958:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4943:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4943:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4963:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4936:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4936:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4936:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4986:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4997:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4982:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4982:18:6"
																	},
																	{
																		"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5002:34:6",
																		"type": "",
																		"value": "BEP20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4975:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4975:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4975:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5057:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5068:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5053:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5053:18:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5073:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5046:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5046:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5046:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5088:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5100:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5111:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5096:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5096:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5088:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4873:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4887:4:6",
														"type": ""
													}
												],
												"src": "4722:399:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5300:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5317:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5328:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5310:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5310:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5351:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5362:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5347:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5347:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5367:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5340:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5340:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5390:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5401:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5386:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5386:18:6"
																	},
																	{
																		"hexValue": "42455032303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5406:34:6",
																		"type": "",
																		"value": "BEP20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5379:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5379:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5379:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5461:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5472:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5457:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5457:18:6"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5477:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5450:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5450:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5450:32:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5491:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5503:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5514:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5499:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5499:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5491:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5277:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5291:4:6",
														"type": ""
													}
												],
												"src": "5126:398:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5630:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5640:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5652:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5663:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5648:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5648:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5640:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5682:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5693:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5675:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5675:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5675:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5599:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5610:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5621:4:6",
														"type": ""
													}
												],
												"src": "5529:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5808:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5818:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5830:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5841:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5826:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5826:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5818:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5860:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5875:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5883:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5871:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5871:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5853:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5853:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5853:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5777:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5788:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5799:4:6",
														"type": ""
													}
												],
												"src": "5711:184:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5948:80:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5975:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5977:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5977:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5977:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5964:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5971:1:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5967:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5967:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5961:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5961:13:6"
															},
															"nodeType": "YulIf",
															"src": "5958:39:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6006:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6017:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6020:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6013:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6013:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6006:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5931:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5934:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5940:3:6",
														"type": ""
													}
												],
												"src": "5900:128:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6082:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6104:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6106:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6106:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6106:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6098:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6101:1:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6095:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6095:8:6"
															},
															"nodeType": "YulIf",
															"src": "6092:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6135:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6147:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6150:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6143:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6143:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6135:4:6"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6064:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6067:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6073:4:6",
														"type": ""
													}
												],
												"src": "6033:125:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6218:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6228:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6242:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6245:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6238:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6238:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6228:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6259:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6289:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6295:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6285:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6285:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6263:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6336:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6338:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6352:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6360:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6348:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6348:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6338:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6316:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6309:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6309:26:6"
															},
															"nodeType": "YulIf",
															"src": "6306:61:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6426:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6447:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6454:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6459:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6450:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6450:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6440:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6440:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6440:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6491:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6494:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6484:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6484:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6484:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6519:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6522:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6512:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6512:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6512:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6382:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6405:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6413:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6402:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6402:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6379:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6379:38:6"
															},
															"nodeType": "YulIf",
															"src": "6376:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6198:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6207:6:6",
														"type": ""
													}
												],
												"src": "6163:380:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6580:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6597:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6604:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6609:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6600:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6600:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6590:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6590:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6590:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6637:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6640:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6630:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6630:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6630:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6661:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6664:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6654:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6654:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6654:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6548:127:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"BEP20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"BEP20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"BEP20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"BEP20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"BEP20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d714610217578063a9059cbb1461022a578063dd62ed3e1461023d578063f2fde38b1461027657600080fd5b8063893d20e8146101c65780638da5cb5b146101eb57806395d89b41146101fc578063a0712d681461020457600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461018057806370a0823114610193578063715018a6146101bc57600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610289565b60405161011a9190610aa9565b60405180910390f35b610136610131366004610a66565b61031b565b604051901515815260200161011a565b6003545b60405190815260200161011a565b610136610166366004610a2a565b610331565b60065460405160ff909116815260200161011a565b61013661018e366004610a66565b61039a565b61014a6101a13660046109dc565b6001600160a01b031660009081526001602052604090205490565b6101c46103d0565b005b6000546001600160a01b03165b6040516001600160a01b03909116815260200161011a565b6000546001600160a01b03166101d3565b61010d6103e4565b610136610212366004610a90565b6103f3565b610136610225366004610a66565b610410565b610136610238366004610a66565b61045f565b61014a61024b3660046109f7565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101c46102843660046109dc565b61046c565b60606004805461029890610b2d565b80601f01602080910402602001604051908101604052809291908181526020018280546102c490610b2d565b80156103115780601f106102e657610100808354040283529160200191610311565b820191906000526020600020905b8154815290600101906020018083116102f457829003601f168201915b5050505050905090565b60006103283384846104ea565b50600192915050565b600061033e84848461060f565b610390843361038b85604051806060016040528060288152602001610b7f602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610795565b6104ea565b5060019392505050565b3360008181526002602090815260408083206001600160a01b0387168452909152812054909161032891859061038b90866107cf565b6103d8610835565b6103e2600061088f565b565b60606005805461029890610b2d565b60006103fd610835565b61040733836108df565b5060015b919050565b6000610328338461038b85604051806060016040528060258152602001610bcd602591393360009081526002602090815260408083206001600160a01b038d1684529091529020549190610795565b600061032833848461060f565b610474610835565b6001600160a01b0381166104de5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6104e78161088f565b50565b6001600160a01b03831661054c5760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104d5565b6001600160a01b0382166105ad5760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104d5565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166106735760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104d5565b6001600160a01b0382166106d55760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104d5565b61071281604051806060016040528060268152602001610ba7602691396001600160a01b0386166000908152600160205260409020549190610795565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461074190826107cf565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106029085815260200190565b600081848411156107b95760405162461bcd60e51b81526004016104d59190610aa9565b5060006107c68486610b16565b95945050505050565b6000806107dc8385610afe565b90508381101561082e5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104d5565b9392505050565b6000546001600160a01b031633146103e25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104d5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0382166109355760405162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104d5565b60035461094290826107cf565b6003556001600160a01b03821660009081526001602052604090205461096890826107cf565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109b99085815260200190565b60405180910390a35050565b80356001600160a01b038116811461040b57600080fd5b6000602082840312156109ee57600080fd5b61082e826109c5565b60008060408385031215610a0a57600080fd5b610a13836109c5565b9150610a21602084016109c5565b90509250929050565b600080600060608486031215610a3f57600080fd5b610a48846109c5565b9250610a56602085016109c5565b9150604084013590509250925092565b60008060408385031215610a7957600080fd5b610a82836109c5565b946020939093013593505050565b600060208284031215610aa257600080fd5b5035919050565b600060208083528351808285015260005b81811015610ad657858101830151858201604001528201610aba565b81811115610ae8576000604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610b1157610b11610b68565b500190565b600082821015610b2857610b28610b68565b500390565b600181811c90821680610b4157607f821691505b60208210811415610b6257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122011af7b644709141e82006cfe5dcb2ed1ee09cc1c1ad2bb8ecba0ccea3bcde99764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0xA66 JUMP JUMPDEST PUSH2 0x31B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0xA2A JUMP JUMPDEST PUSH2 0x331 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0xA66 JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x3D0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x3E4 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0xA90 JUMP JUMPDEST PUSH2 0x3F3 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0xA66 JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x238 CALLDATASIZE PUSH1 0x4 PUSH2 0xA66 JUMP JUMPDEST PUSH2 0x45F JUMP JUMPDEST PUSH2 0x14A PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x9F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DC JUMP JUMPDEST PUSH2 0x46C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x298 SWAP1 PUSH2 0xB2D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2C4 SWAP1 PUSH2 0xB2D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x311 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2E6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x311 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x328 CALLER DUP5 DUP5 PUSH2 0x4EA JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33E DUP5 DUP5 DUP5 PUSH2 0x60F JUMP JUMPDEST PUSH2 0x390 DUP5 CALLER PUSH2 0x38B DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB7F PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x795 JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x328 SWAP2 DUP6 SWAP1 PUSH2 0x38B SWAP1 DUP7 PUSH2 0x7CF JUMP JUMPDEST PUSH2 0x3D8 PUSH2 0x835 JUMP JUMPDEST PUSH2 0x3E2 PUSH1 0x0 PUSH2 0x88F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x298 SWAP1 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FD PUSH2 0x835 JUMP JUMPDEST PUSH2 0x407 CALLER DUP4 PUSH2 0x8DF JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x328 CALLER DUP5 PUSH2 0x38B DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBCD PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x795 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x328 CALLER DUP5 DUP5 PUSH2 0x60F JUMP JUMPDEST PUSH2 0x474 PUSH2 0x835 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E7 DUP2 PUSH2 0x88F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x673 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4D5 JUMP JUMPDEST PUSH2 0x712 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBA7 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x795 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x741 SWAP1 DUP3 PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x602 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x7B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0xAA9 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x7C6 DUP5 DUP7 PUSH2 0xB16 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7DC DUP4 DUP6 PUSH2 0xAFE JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x82E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x942 SWAP1 DUP3 PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x968 SWAP1 DUP3 PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x9B9 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x82E DUP3 PUSH2 0x9C5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA13 DUP4 PUSH2 0x9C5 JUMP JUMPDEST SWAP2 POP PUSH2 0xA21 PUSH1 0x20 DUP5 ADD PUSH2 0x9C5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA48 DUP5 PUSH2 0x9C5 JUMP JUMPDEST SWAP3 POP PUSH2 0xA56 PUSH1 0x20 DUP6 ADD PUSH2 0x9C5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA82 DUP4 PUSH2 0x9C5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAD6 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xABA JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xAE8 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xB11 JUMPI PUSH2 0xB11 PUSH2 0xB68 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xB28 JUMPI PUSH2 0xB28 PUSH2 0xB68 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xB41 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xB62 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 GT 0xAF PUSH28 0x644709141E82006CFE5DCB2ED1EE09CC1C1AD2BB8ECBA0CCEA3BCDE9 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1468:8913:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2531:92;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4018:161;;;;;;:::i;:::-;;:::i;:::-;;;1798:14:6;;1791:22;1773:41;;1761:2;1746:18;4018:161:5;1633:187:6;3007:100:5;3087:12;;3007:100;;;5675:25:6;;;5663:2;5648:18;3007:100:5;5529:177:6;4650:397:5;;;;;;:::i;:::-;;:::i;2690:92::-;2765:9;;2690:92;;2765:9;;;;5853:36:6;;5841:2;5826:18;2690:92:5;5711:184:6;5455:210:5;;;;;;:::i;:::-;;:::i;3169:119::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3262:18:5;3235:7;3262:18;;;:9;:18;;;;;;;3169:119;1831:101:0;;;:::i;:::-;;2374:94:5;2426:7;1273:6:0;-1:-1:-1;;;;;1273:6:0;2374:94:5;;;-1:-1:-1;;;;;1589:32:6;;;1571:51;;1559:2;1544:18;2374:94:5;1425:203:6;1201:85:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;2847:96:5;;;:::i;6696:138::-;;;;;;:::i;:::-;;:::i;6167:311::-;;;;;;:::i;:::-;;:::i;3500:167::-;;;;;;:::i;:::-;;:::i;3729:143::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3837:18:5;;;3810:7;3837:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3729:143;2081:198:0;;;;;;:::i;:::-;;:::i;2531:92:5:-;2577:13;2610:5;2603:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2531:92;:::o;4018:161::-;4093:4;4110:39;719:10:1;4133:7:5;4142:6;4110:8;:39::i;:::-;-1:-1:-1;4167:4:5;4018:161;;;;:::o;4650:397::-;4782:4;4799:36;4809:6;4817:9;4828:6;4799:9;:36::i;:::-;4846:171;4869:6;719:10:1;4917:89:5;4955:6;4917:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4917:19:5;;;;;;:11;:19;;;;;;;;719:10:1;4917:33:5;;;;;;;;;;:37;:89::i;:::-;4846:8;:171::i;:::-;-1:-1:-1;5035:4:5;4650:397;;;;;:::o;5455:210::-;719:10:1;5535:4:5;5584:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5584:34:5;;;;;;;;;;5535:4;;5552:83;;5575:7;;5584:50;;5623:10;5584:38;:50::i;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2847:96:5:-;2895:13;2928:7;2921:14;;;;;:::i;6696:138::-;6760:4;1094:13:0;:11;:13::i;:::-;6777:27:5::1;719:10:1::0;6797:6:5::1;6777:5;:27::i;:::-;-1:-1:-1::0;6822:4:5::1;1117:1:0;6696:138:5::0;;;:::o;6167:311::-;6252:4;6269:179;719:10:1;6319:7:5;6341:96;6380:15;6341:96;;;;;;;;;;;;;;;;;719:10:1;6341:25:5;;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6341:34:5;;;;;;;;;;;;:38;:96::i;3500:167::-;3578:4;3595:42;719:10:1;3619:9:5;3630:6;3595:9;:42::i;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;3440:2:6;2161:73:0::1;::::0;::::1;3422:21:6::0;3479:2;3459:18;;;3452:30;3518:34;3498:18;;;3491:62;-1:-1:-1;;;3569:18:6;;;3562:36;3615:19;;2161:73:0::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;9538:372:5:-;-1:-1:-1;;;;;9666:19:5;;9658:68;;;;-1:-1:-1;;;9658:68:5;;3035:2:6;9658:68:5;;;3017:21:6;3074:2;3054:18;;;3047:30;3113:34;3093:18;;;3086:62;-1:-1:-1;;;3164:18:6;;;3157:34;3208:19;;9658:68:5;2833:400:6;9658:68:5;-1:-1:-1;;;;;9745:21:5;;9737:68;;;;-1:-1:-1;;;9737:68:5;;5328:2:6;9737:68:5;;;5310:21:6;5367:2;5347:18;;;5340:30;5406:34;5386:18;;;5379:62;-1:-1:-1;;;5457:18:6;;;5450:32;5499:19;;9737:68:5;5126:398:6;9737:68:5;-1:-1:-1;;;;;9818:18:5;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9870:32;;5675:25:6;;;9870:32:5;;5648:18:6;9870:32:5;;;;;;;;9538:372;;;:::o;7324:505::-;-1:-1:-1;;;;;7456:20:5;;7448:70;;;;-1:-1:-1;;;7448:70:5;;2629:2:6;7448:70:5;;;2611:21:6;2668:2;2648:18;;;2641:30;2707:34;2687:18;;;2680:62;-1:-1:-1;;;2758:18:6;;;2751:35;2803:19;;7448:70:5;2427:401:6;7448:70:5;-1:-1:-1;;;;;7537:23:5;;7529:71;;;;-1:-1:-1;;;7529:71:5;;4924:2:6;7529:71:5;;;4906:21:6;4963:2;4943:18;;;4936:30;5002:34;4982:18;;;4975:62;-1:-1:-1;;;5053:18:6;;;5046:33;5096:19;;7529:71:5;4722:399:6;7529:71:5;7633;7655:6;7633:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7633:17:5;;;;;;:9;:17;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7613:17:5;;;;;;;:9;:17;;;;;;:91;;;;7738:20;;;;;;;:32;;7763:6;7738:24;:32::i;:::-;-1:-1:-1;;;;;7715:20:5;;;;;;;:9;:20;;;;;;;:55;;;;7786:35;;;;;;;;;;7814:6;5675:25:6;;5663:2;5648:18;;5529:177;1806:226:4;1926:7;1962:12;1954:6;;;;1946:29;;;;-1:-1:-1;;;1946:29:4;;;;;;;;:::i;:::-;-1:-1:-1;1986:9:4;1998:5;2002:1;1998;:5;:::i;:::-;1986:17;1806:226;-1:-1:-1;;;;;1806:226:4:o;903:181::-;961:7;;993:5;997:1;993;:5;:::i;:::-;981:17;;1022:1;1017;:6;;1009:46;;;;-1:-1:-1;;;1009:46:4;;3847:2:6;1009:46:4;;;3829:21:6;3886:2;3866:18;;;3859:30;3925:29;3905:18;;;3898:57;3972:18;;1009:46:4;3645:351:6;1009:46:4;1075:1;903:181;-1:-1:-1;;;903:181:4:o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:1;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;4563:2:6;1414:68:0;;;4545:21:6;;;4582:18;;;4575:30;4641:34;4621:18;;;4614:62;4693:18;;1414:68:0;4361:356:6;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;8110:308:5:-;-1:-1:-1;;;;;8186:21:5;;8178:65;;;;-1:-1:-1;;;8178:65:5;;4203:2:6;8178:65:5;;;4185:21:6;4242:2;4222:18;;;4215:30;4281:33;4261:18;;;4254:61;4332:18;;8178:65:5;4001:355:6;8178:65:5;8271:12;;:24;;8288:6;8271:16;:24::i;:::-;8256:12;:39;-1:-1:-1;;;;;8327:18:5;;;;;;:9;:18;;;;;;:30;;8350:6;8327:22;:30::i;:::-;-1:-1:-1;;;;;8306:18:5;;;;;;:9;:18;;;;;;:51;;;;8373:37;;8306:18;;;8373:37;;;;8403:6;5675:25:6;;5663:2;5648:18;;5529:177;8373:37:5;;;;;;;;8110:308;;:::o;14:173:6:-;82:20;;-1:-1:-1;;;;;131:31:6;;121:42;;111:70;;177:1;174;167:12;192:186;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:6:o;1240:180::-;1299:6;1352:2;1340:9;1331:7;1327:23;1323:32;1320:52;;;1368:1;1365;1358:12;1320:52;-1:-1:-1;1391:23:6;;1240:180;-1:-1:-1;1240:180:6:o;1825:597::-;1937:4;1966:2;1995;1984:9;1977:21;2027:6;2021:13;2070:6;2065:2;2054:9;2050:18;2043:34;2095:1;2105:140;2119:6;2116:1;2113:13;2105:140;;;2214:14;;;2210:23;;2204:30;2180:17;;;2199:2;2176:26;2169:66;2134:10;;2105:140;;;2263:6;2260:1;2257:13;2254:91;;;2333:1;2328:2;2319:6;2308:9;2304:22;2300:31;2293:42;2254:91;-1:-1:-1;2406:2:6;2385:15;-1:-1:-1;;2381:29:6;2366:45;;;;2413:2;2362:54;;1825:597;-1:-1:-1;;;1825:597:6:o;5900:128::-;5940:3;5971:1;5967:6;5964:1;5961:13;5958:39;;;5977:18;;:::i;:::-;-1:-1:-1;6013:9:6;;5900:128::o;6033:125::-;6073:4;6101:1;6098;6095:8;6092:34;;;6106:18;;:::i;:::-;-1:-1:-1;6143:9:6;;6033:125::o;6163:380::-;6242:1;6238:12;;;;6285;;;6306:61;;6360:4;6352:6;6348:17;6338:27;;6306:61;6413:2;6405:6;6402:14;6382:18;6379:38;6376:161;;;6459:10;6454:3;6450:20;6447:1;6440:31;6494:4;6491:1;6484:15;6522:4;6519:1;6512:15;6376:161;;6163:380;;;:::o;6548:127::-;6609:10;6604:3;6600:20;6597:1;6590:31;6640:4;6637:1;6630:15;6664:4;6661:1;6654:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "622200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24643",
								"balanceOf(address)": "2604",
								"decimals()": "2312",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "2343",
								"increaseAllowance(address,uint256)": "27056",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2376",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2349",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28421"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 2165,
									"end": 2306,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2232,
									"end": 2245,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2232,
									"end": 2245,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2232,
									"end": 2245,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 2232,
									"end": 2245,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2232,
									"end": 2245,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2232,
									"end": 2245,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2232,
									"end": 2245,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2232,
									"end": 2245,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2232,
									"end": 2245,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 2232,
									"end": 2245,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2232,
									"end": 2245,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 2232,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2256,
									"end": 2273,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2256,
									"end": 2273,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2256,
									"end": 2273,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 2256,
									"end": 2273,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2256,
									"end": 2263,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2256,
									"end": 2263,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2256,
									"end": 2273,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2256,
									"end": 2273,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2256,
									"end": 2273,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2256,
									"end": 2273,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2256,
									"end": 2273,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 2256,
									"end": 2273,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2256,
									"end": 2273,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 2256,
									"end": 2273,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2284,
									"end": 2293,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 2284,
									"end": 2298,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2284,
									"end": 2298,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2284,
									"end": 2298,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2296,
									"end": 2298,
									"name": "PUSH",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 2284,
									"end": 2298,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2284,
									"end": 2298,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2284,
									"end": 2298,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 88,
									"end": 143,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 88,
									"end": 143,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 221,
									"end": 257,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 221,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 221,
									"end": 257,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 6,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 404,
									"end": 476,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 404,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 404,
									"end": 476,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 566,
									"end": 619,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 566,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 566,
									"end": 619,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 789,
									"end": 869,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 789,
									"end": 869,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": 14,
									"end": 899,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 1660,
									"end": 1666,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1656,
									"end": 1673,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1687,
									"end": 1725,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1767,
									"end": 1777,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 1762,
									"end": 1765,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1758,
									"end": 1778,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1802,
									"end": 1806,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1799,
									"end": 1800,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1792,
									"end": 1807,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1830,
									"end": 1834,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1827,
									"end": 1828,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1820,
									"end": 1835,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1917,
									"end": 1927,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 1912,
									"end": 1915,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1908,
									"end": 1928,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1898,
									"end": 1929,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1948,
									"end": 1952,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1938,
									"end": 1953,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1972,
									"end": 1976,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1977,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1468,
									"end": 10381,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122011af7b644709141e82006cfe5dcb2ed1ee09cc1c1ad2bb8ecba0ccea3bcde99764736f6c63430008070033",
									".code": [
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "893D20E8"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "A457C2D7"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "A457C2D7"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "893D20E8"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "A0712D68"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "39509351"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 10381,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4179,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4018,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4018,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 4018,
											"end": 4179,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4179,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4018,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 4018,
											"end": 4179,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4018,
											"end": 4179,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 4018,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 4018,
											"end": 4179,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4018,
											"end": 4179,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4018,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4179,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4018,
											"end": 4179,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1798,
											"end": 1812,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1798,
											"end": 1812,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1813,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1814,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1763,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1746,
											"end": 1764,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1633,
											"end": 1820,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3007,
											"end": 3107,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3007,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3087,
											"end": 3099,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3007,
											"end": 3107,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3007,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3007,
											"end": 3107,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3007,
											"end": 3107,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5675,
											"end": 5700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5675,
											"end": 5700,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5675,
											"end": 5700,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5663,
											"end": 5665,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5648,
											"end": 5666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3007,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5529,
											"end": 5706,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4650,
											"end": 5047,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4650,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4650,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4650,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 4650,
											"end": 5047,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4650,
											"end": 5047,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4650,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 4650,
											"end": 5047,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4650,
											"end": 5047,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 4650,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4650,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 4650,
											"end": 5047,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2690,
											"end": 2782,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2690,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2765,
											"end": 2774,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2765,
											"end": 2774,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2782,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2690,
											"end": 2782,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2765,
											"end": 2774,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2765,
											"end": 2774,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2765,
											"end": 2774,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2765,
											"end": 2774,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5853,
											"end": 5889,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5853,
											"end": 5889,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5841,
											"end": 5843,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5826,
											"end": 5844,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5711,
											"end": 5895,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5665,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 5455,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5455,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5455,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 5455,
											"end": 5665,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5455,
											"end": 5665,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5455,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 5455,
											"end": 5665,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5455,
											"end": 5665,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 5455,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5455,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 5455,
											"end": 5665,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3169,
											"end": 3288,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 3169,
											"end": 3288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3169,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 3169,
											"end": 3288,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3288,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3169,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 3169,
											"end": 3288,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3169,
											"end": 3288,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 3169,
											"end": 3288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3262,
											"end": 3280,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3235,
											"end": 3242,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3262,
											"end": 3280,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3262,
											"end": 3280,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3262,
											"end": 3280,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3262,
											"end": 3271,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3262,
											"end": 3280,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3262,
											"end": 3280,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3262,
											"end": 3280,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3262,
											"end": 3280,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3262,
											"end": 3280,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3262,
											"end": 3280,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3262,
											"end": 3280,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3288,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2468,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2374,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2433,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2468,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2374,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2374,
											"end": 2468,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2374,
											"end": 2468,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1589,
											"end": 1621,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1589,
											"end": 1621,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1589,
											"end": 1621,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1622,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1622,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1559,
											"end": 1561,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1544,
											"end": 1562,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1425,
											"end": 1628,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 2943,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2847,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2847,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2847,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2847,
											"end": 2943,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6696,
											"end": 6834,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 6696,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6696,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 6696,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 6696,
											"end": 6834,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 6696,
											"end": 6834,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6696,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 6696,
											"end": 6834,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6696,
											"end": 6834,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 6696,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6696,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 6696,
											"end": 6834,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6167,
											"end": 6478,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 6167,
											"end": 6478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6167,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 6167,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 6167,
											"end": 6478,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 6167,
											"end": 6478,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6167,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 6167,
											"end": 6478,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6167,
											"end": 6478,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 6167,
											"end": 6478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6167,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 6167,
											"end": 6478,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3500,
											"end": 3667,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 3500,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3500,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3500,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3500,
											"end": 3667,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3500,
											"end": 3667,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3500,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3500,
											"end": 3667,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3500,
											"end": 3667,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3500,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3500,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 3500,
											"end": 3667,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3872,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 3729,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3729,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3729,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3729,
											"end": 3872,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3729,
											"end": 3872,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3729,
											"end": 3872,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3872,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3729,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3848,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3864,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3864,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3864,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3864,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3864,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3864,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3864,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3864,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3864,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3864,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3864,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3864,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3864,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3729,
											"end": 3872,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2610,
											"end": 2615,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2615,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2623,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4018,
											"end": 4179,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 4018,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4097,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4133,
											"end": 4140,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4148,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4110,
											"end": 4118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 4110,
											"end": 4149,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4110,
											"end": 4149,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4110,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4167,
											"end": 4171,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4018,
											"end": 4179,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4179,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4179,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4650,
											"end": 5047,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 4650,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4782,
											"end": 4786,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4799,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 4809,
											"end": 4815,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4817,
											"end": 4826,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 4834,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4799,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4799,
											"end": 4835,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4799,
											"end": 4835,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 4799,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4846,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4869,
											"end": 4875,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4917,
											"end": 5006,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 4955,
											"end": 4961,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 5006,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 5006,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 5006,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 5006,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4917,
											"end": 5006,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 5006,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 5006,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 5006,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 5006,
											"name": "PUSH",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 4917,
											"end": 5006,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 5006,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 5006,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4917,
											"end": 5006,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 5006,
											"name": "PUSH data",
											"source": 5,
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 4917,
											"end": 5006,
											"name": "PUSH",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 4917,
											"end": 5006,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 5006,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4917,
											"end": 4936,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4936,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4936,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4917,
											"end": 4936,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4936,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4936,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4928,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4917,
											"end": 4936,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4917,
											"end": 4936,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4936,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4936,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4936,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 4936,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4936,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4936,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4917,
											"end": 4950,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4950,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4950,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4950,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4950,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4950,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4950,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4950,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4950,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4950,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4954,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4917,
											"end": 5006,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4917,
											"end": 5006,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 4917,
											"end": 5006,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4846,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 4846,
											"end": 5017,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4846,
											"end": 5017,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4846,
											"end": 5017,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5035,
											"end": 5039,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4650,
											"end": 5047,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4650,
											"end": 5047,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4650,
											"end": 5047,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4650,
											"end": 5047,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4650,
											"end": 5047,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4650,
											"end": 5047,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5455,
											"end": 5665,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 5455,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5535,
											"end": 5539,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5584,
											"end": 5609,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5609,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5609,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5595,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5584,
											"end": 5609,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5584,
											"end": 5609,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5609,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5609,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5609,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5584,
											"end": 5609,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5609,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5609,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5584,
											"end": 5618,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5618,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5618,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5618,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5618,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5618,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5618,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5618,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5618,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5618,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5539,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5539,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 5552,
											"end": 5635,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5582,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5582,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 5584,
											"end": 5634,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5623,
											"end": 5633,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 5584,
											"end": 5634,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2847,
											"end": 2943,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2847,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2895,
											"end": 2908,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2928,
											"end": 2935,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2921,
											"end": 2935,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2921,
											"end": 2935,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2921,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2921,
											"end": 2935,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2921,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2921,
											"end": 2935,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6696,
											"end": 6834,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 6696,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6760,
											"end": 6764,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6777,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6803,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6777,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 6777,
											"end": 6804,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6777,
											"end": 6804,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 6777,
											"end": 6804,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6822,
											"end": 6826,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1117,
											"end": 1118,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1117,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 6834,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6696,
											"end": 6834,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6696,
											"end": 6834,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6696,
											"end": 6834,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6167,
											"end": 6478,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 6167,
											"end": 6478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6252,
											"end": 6256,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6269,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6326,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 6380,
											"end": 6395,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6437,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6341,
											"end": 6437,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6437,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6341,
											"end": 6437,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6437,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6341,
											"end": 6437,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6437,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 6341,
											"end": 6437,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6437,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6437,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6341,
											"end": 6437,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6437,
											"name": "PUSH data",
											"source": 5,
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 6341,
											"end": 6437,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 6341,
											"end": 6437,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6437,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 6341,
											"end": 6366,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6341,
											"end": 6366,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6366,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6366,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6352,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6341,
											"end": 6366,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6341,
											"end": 6366,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6366,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6366,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6366,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6341,
											"end": 6366,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6366,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6366,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6341,
											"end": 6375,
											"name": "DUP14",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6375,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6375,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6375,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6375,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6375,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6375,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6375,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6375,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6379,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 6341,
											"end": 6437,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3500,
											"end": 3667,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 3500,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3578,
											"end": 3582,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3628,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3630,
											"end": 3636,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3595,
											"end": 3637,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3442,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3422,
											"end": 3443,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3481,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3452,
											"end": 3482,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 3498,
											"end": 3516,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3498,
											"end": 3516,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3516,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3491,
											"end": 3553,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3598,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3615,
											"end": 3634,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3615,
											"end": 3634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9538,
											"end": 9910,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 9538,
											"end": 9910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9666,
											"end": 9685,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9666,
											"end": 9685,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9658,
											"end": 9726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 9658,
											"end": 9726,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9658,
											"end": 9726,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9658,
											"end": 9726,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9658,
											"end": 9726,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9658,
											"end": 9726,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3037,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9658,
											"end": 9726,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9658,
											"end": 9726,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9658,
											"end": 9726,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3017,
											"end": 3038,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3076,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3054,
											"end": 3072,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3054,
											"end": 3072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3054,
											"end": 3072,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3077,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3147,
											"name": "PUSH",
											"source": 6,
											"value": "42455032303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3093,
											"end": 3111,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3093,
											"end": 3111,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3086,
											"end": 3148,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3164,
											"end": 3182,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3164,
											"end": 3182,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3164,
											"end": 3182,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3157,
											"end": 3191,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3208,
											"end": 3227,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3208,
											"end": 3227,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2833,
											"end": 3233,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9726,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 9658,
											"end": 9726,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9745,
											"end": 9766,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9745,
											"end": 9766,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9737,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 9737,
											"end": 9805,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9737,
											"end": 9805,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9737,
											"end": 9805,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9737,
											"end": 9805,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9737,
											"end": 9805,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5328,
											"end": 5330,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9737,
											"end": 9805,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9737,
											"end": 9805,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9737,
											"end": 9805,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5310,
											"end": 5331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5367,
											"end": 5369,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 5347,
											"end": 5365,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5347,
											"end": 5365,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5347,
											"end": 5365,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5340,
											"end": 5370,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5406,
											"end": 5440,
											"name": "PUSH",
											"source": 6,
											"value": "42455032303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 5386,
											"end": 5404,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5386,
											"end": 5404,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5386,
											"end": 5404,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5441,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5450,
											"end": 5482,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5499,
											"end": 5518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9737,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 5126,
											"end": 5524,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9737,
											"end": 9805,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 9737,
											"end": 9805,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9818,
											"end": 9836,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9836,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9836,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9836,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9818,
											"end": 9836,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9836,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9836,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9829,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 9818,
											"end": 9836,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9818,
											"end": 9836,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9836,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9836,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9836,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9818,
											"end": 9836,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9836,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9836,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9845,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9845,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9845,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9845,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9845,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9845,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9845,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9845,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9845,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9845,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9845,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9845,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9845,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9854,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9854,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9818,
											"end": 9854,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9870,
											"end": 9902,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9870,
											"end": 9902,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5675,
											"end": 5700,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5675,
											"end": 5700,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5675,
											"end": 5700,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9870,
											"end": 9902,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9870,
											"end": 9902,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5648,
											"end": 5666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9870,
											"end": 9902,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 9870,
											"end": 9902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9870,
											"end": 9902,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9870,
											"end": 9902,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9870,
											"end": 9902,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9870,
											"end": 9902,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9870,
											"end": 9902,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9870,
											"end": 9902,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9870,
											"end": 9902,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 9538,
											"end": 9910,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9538,
											"end": 9910,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9538,
											"end": 9910,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9538,
											"end": 9910,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7324,
											"end": 7829,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 7324,
											"end": 7829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7456,
											"end": 7476,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7456,
											"end": 7476,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7448,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 7448,
											"end": 7518,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7448,
											"end": 7518,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7448,
											"end": 7518,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7448,
											"end": 7518,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7448,
											"end": 7518,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2629,
											"end": 2631,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7448,
											"end": 7518,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7448,
											"end": 7518,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7448,
											"end": 7518,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2611,
											"end": 2632,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2641,
											"end": 2671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2741,
											"name": "PUSH",
											"source": 6,
											"value": "42455032303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 2687,
											"end": 2705,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2687,
											"end": 2705,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2687,
											"end": 2705,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2680,
											"end": 2742,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2758,
											"end": 2776,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2758,
											"end": 2776,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2776,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2786,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2822,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2803,
											"end": 2822,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7448,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2427,
											"end": 2828,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7448,
											"end": 7518,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 7448,
											"end": 7518,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7537,
											"end": 7560,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7537,
											"end": 7560,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4924,
											"end": 4926,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4906,
											"end": 4927,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 4943,
											"end": 4961,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4943,
											"end": 4961,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4943,
											"end": 4961,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 4966,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5002,
											"end": 5036,
											"name": "PUSH",
											"source": 6,
											"value": "42455032303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 4982,
											"end": 5000,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4982,
											"end": 5000,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4982,
											"end": 5000,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4975,
											"end": 5037,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5053,
											"end": 5071,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5053,
											"end": 5071,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5053,
											"end": 5071,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5046,
											"end": 5079,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5115,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5096,
											"end": 5115,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4722,
											"end": 5121,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 7655,
											"end": 7661,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7633,
											"end": 7704,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7704,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7704,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7633,
											"end": 7704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7633,
											"end": 7704,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7704,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7704,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 7633,
											"end": 7704,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7704,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7704,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7633,
											"end": 7704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7704,
											"name": "PUSH data",
											"source": 5,
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 7633,
											"end": 7704,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 7633,
											"end": 7704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7704,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7633,
											"end": 7650,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7650,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7650,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7633,
											"end": 7650,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7650,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7650,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7642,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7633,
											"end": 7650,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7633,
											"end": 7650,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7650,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7633,
											"end": 7650,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7650,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7650,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7650,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 7633,
											"end": 7704,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7633,
											"end": 7704,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 7633,
											"end": 7704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7613,
											"end": 7630,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7613,
											"end": 7630,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7613,
											"end": 7630,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7613,
											"end": 7630,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7613,
											"end": 7630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7613,
											"end": 7630,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7613,
											"end": 7630,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7613,
											"end": 7622,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7613,
											"end": 7630,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7613,
											"end": 7630,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7613,
											"end": 7630,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7613,
											"end": 7630,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7613,
											"end": 7630,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7613,
											"end": 7630,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7613,
											"end": 7704,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7613,
											"end": 7704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7613,
											"end": 7704,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7613,
											"end": 7704,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7738,
											"end": 7758,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7738,
											"end": 7758,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7738,
											"end": 7758,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7738,
											"end": 7758,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7738,
											"end": 7758,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7738,
											"end": 7758,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7738,
											"end": 7758,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7738,
											"end": 7770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 7738,
											"end": 7770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7763,
											"end": 7769,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7738,
											"end": 7762,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 7738,
											"end": 7770,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7738,
											"end": 7770,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 7738,
											"end": 7770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7715,
											"end": 7735,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7715,
											"end": 7735,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7715,
											"end": 7735,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7715,
											"end": 7735,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7715,
											"end": 7735,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7715,
											"end": 7735,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7715,
											"end": 7735,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7715,
											"end": 7724,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7715,
											"end": 7735,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7715,
											"end": 7735,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7715,
											"end": 7735,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7715,
											"end": 7735,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7715,
											"end": 7735,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7715,
											"end": 7735,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7715,
											"end": 7735,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7715,
											"end": 7770,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7715,
											"end": 7770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7715,
											"end": 7770,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7715,
											"end": 7770,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7786,
											"end": 7821,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7786,
											"end": 7821,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7786,
											"end": 7821,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7786,
											"end": 7821,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7786,
											"end": 7821,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7786,
											"end": 7821,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7786,
											"end": 7821,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7786,
											"end": 7821,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7786,
											"end": 7821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 7786,
											"end": 7821,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7814,
											"end": 7820,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5675,
											"end": 5700,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5675,
											"end": 5700,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5663,
											"end": 5665,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5648,
											"end": 5666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5648,
											"end": 5666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5529,
											"end": 5706,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 2032,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1806,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1926,
											"end": 1933,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 1974,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1946,
											"end": 1975,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1975,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1946,
											"end": 1975,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1946,
											"end": 1975,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1975,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1975,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1946,
											"end": 1975,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1946,
											"end": 1975,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1975,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1946,
											"end": 1975,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1946,
											"end": 1975,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1946,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1986,
											"end": 1995,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2002,
											"end": 2003,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 1999,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1998,
											"end": 2003,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2003,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1998,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1986,
											"end": 2003,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1806,
											"end": 2032,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1806,
											"end": 2032,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 903,
											"end": 1084,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 903,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 961,
											"end": 968,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 968,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 993,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 997,
											"end": 998,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 993,
											"end": 994,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 993,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 981,
											"end": 998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 981,
											"end": 998,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1022,
											"end": 1023,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1017,
											"end": 1018,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1017,
											"end": 1023,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1017,
											"end": 1023,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 1009,
											"end": 1055,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1055,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1009,
											"end": 1055,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1009,
											"end": 1055,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1055,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3849,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1055,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1009,
											"end": 1055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1055,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3829,
											"end": 3850,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 3888,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3859,
											"end": 3889,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3925,
											"end": 3954,
											"name": "PUSH",
											"source": 6,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 3905,
											"end": 3923,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3905,
											"end": 3923,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3905,
											"end": 3923,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3898,
											"end": 3955,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1009,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 3645,
											"end": 3996,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1009,
											"end": 1055,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 1009,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 903,
											"end": 1084,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 903,
											"end": 1084,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4563,
											"end": 4565,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4545,
											"end": 4566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4545,
											"end": 4566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4545,
											"end": 4566,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4582,
											"end": 4600,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4582,
											"end": 4600,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4582,
											"end": 4600,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 4605,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 4675,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4621,
											"end": 4639,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4621,
											"end": 4639,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4621,
											"end": 4639,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4676,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4361,
											"end": 4717,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8110,
											"end": 8418,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 8110,
											"end": 8418,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8186,
											"end": 8207,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8186,
											"end": 8207,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8178,
											"end": 8243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 8178,
											"end": 8243,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8178,
											"end": 8243,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8178,
											"end": 8243,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8178,
											"end": 8243,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8178,
											"end": 8243,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4203,
											"end": 4205,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8178,
											"end": 8243,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8178,
											"end": 8243,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8178,
											"end": 8243,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4185,
											"end": 4206,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4242,
											"end": 4244,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4222,
											"end": 4240,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4222,
											"end": 4240,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4222,
											"end": 4240,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4245,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4281,
											"end": 4314,
											"name": "PUSH",
											"source": 6,
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 4261,
											"end": 4279,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4261,
											"end": 4279,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4279,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4254,
											"end": 4315,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4350,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4332,
											"end": 4350,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8178,
											"end": 8243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4001,
											"end": 4356,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8178,
											"end": 8243,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 8178,
											"end": 8243,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8271,
											"end": 8283,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 8271,
											"end": 8283,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8271,
											"end": 8295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 8271,
											"end": 8295,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8288,
											"end": 8294,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8271,
											"end": 8287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 8271,
											"end": 8295,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8271,
											"end": 8295,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 8271,
											"end": 8295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8256,
											"end": 8268,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 8256,
											"end": 8295,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8327,
											"end": 8336,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 8327,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 8327,
											"end": 8357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8350,
											"end": 8356,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8327,
											"end": 8349,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 8327,
											"end": 8357,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8327,
											"end": 8357,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 8327,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8306,
											"end": 8324,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8324,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8324,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8306,
											"end": 8324,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8324,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8324,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8315,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8306,
											"end": 8324,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8306,
											"end": 8324,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8324,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8306,
											"end": 8324,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8324,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8324,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8357,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8357,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8357,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 8373,
											"end": 8410,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8373,
											"end": 8410,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8324,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8324,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8324,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8373,
											"end": 8410,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8373,
											"end": 8410,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8373,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 8373,
											"end": 8410,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8403,
											"end": 8409,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5675,
											"end": 5700,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5675,
											"end": 5700,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5663,
											"end": 5665,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5648,
											"end": 5666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5648,
											"end": 5666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5529,
											"end": 5706,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8373,
											"end": 8410,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 8373,
											"end": 8410,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8373,
											"end": 8410,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8373,
											"end": 8410,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8373,
											"end": 8410,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8373,
											"end": 8410,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8373,
											"end": 8410,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8373,
											"end": 8410,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8373,
											"end": 8410,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 8110,
											"end": 8418,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8110,
											"end": 8418,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8110,
											"end": 8418,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1085,
											"end": 1108,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1113,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1126,
											"end": 1127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1116,
											"end": 1128,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1078,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1168,
											"end": 1177,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1149,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1228,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1229,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1235,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1240,
											"end": 1420,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1240,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 1305,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1354,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1340,
											"end": 1349,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1331,
											"end": 1338,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1327,
											"end": 1350,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1355,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1372,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1320,
											"end": 1372,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1320,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1414,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1414,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1420,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1420,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1825,
											"end": 2422,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1825,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1937,
											"end": 1941,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1968,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1995,
											"end": 1997,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1984,
											"end": 1993,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 1998,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2034,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2070,
											"end": 2076,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2067,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2054,
											"end": 2063,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2050,
											"end": 2068,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2043,
											"end": 2077,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2095,
											"end": 2096,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2119,
											"end": 2125,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2116,
											"end": 2117,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2126,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2214,
											"end": 2228,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2214,
											"end": 2228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2214,
											"end": 2228,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2233,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2233,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2204,
											"end": 2234,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2197,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2197,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2180,
											"end": 2197,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2201,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2176,
											"end": 2202,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2169,
											"end": 2235,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2144,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2144,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2105,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2269,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2260,
											"end": 2261,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2257,
											"end": 2270,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2345,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2254,
											"end": 2345,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2334,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2330,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2325,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2317,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2304,
											"end": 2326,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2335,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2345,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2254,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2406,
											"end": 2408,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2385,
											"end": 2400,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2381,
											"end": 2410,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2366,
											"end": 2411,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2366,
											"end": 2411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2366,
											"end": 2411,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2366,
											"end": 2411,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2413,
											"end": 2415,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2362,
											"end": 2416,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2362,
											"end": 2416,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 2422,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1825,
											"end": 2422,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5900,
											"end": 6028,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 5900,
											"end": 6028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5943,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5971,
											"end": 5972,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 5973,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5964,
											"end": 5965,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5974,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5958,
											"end": 5997,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5958,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 5958,
											"end": 5997,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6013,
											"end": 6022,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6013,
											"end": 6022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5900,
											"end": 6028,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6033,
											"end": 6158,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 6033,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6077,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6101,
											"end": 6102,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6098,
											"end": 6099,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6095,
											"end": 6103,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6092,
											"end": 6126,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6092,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 6092,
											"end": 6126,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6143,
											"end": 6152,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6143,
											"end": 6152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6033,
											"end": 6158,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6163,
											"end": 6543,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 6163,
											"end": 6543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6242,
											"end": 6243,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6238,
											"end": 6250,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6238,
											"end": 6250,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6238,
											"end": 6250,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 6238,
											"end": 6250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6285,
											"end": 6297,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6285,
											"end": 6297,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6285,
											"end": 6297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6306,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 6306,
											"end": 6367,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 6352,
											"end": 6358,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6365,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6338,
											"end": 6365,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6338,
											"end": 6365,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6306,
											"end": 6367,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 6306,
											"end": 6367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6413,
											"end": 6415,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6402,
											"end": 6416,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6400,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6379,
											"end": 6417,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6537,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6376,
											"end": 6537,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6469,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 6454,
											"end": 6457,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6450,
											"end": 6470,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6447,
											"end": 6448,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6440,
											"end": 6471,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6498,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 6491,
											"end": 6492,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6484,
											"end": 6499,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6526,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6519,
											"end": 6520,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6512,
											"end": 6527,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6537,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6376,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6163,
											"end": 6543,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6163,
											"end": 6543,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6163,
											"end": 6543,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6163,
											"end": 6543,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6548,
											"end": 6675,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 6548,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6609,
											"end": 6619,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 6604,
											"end": 6607,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6600,
											"end": 6620,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6597,
											"end": 6598,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6590,
											"end": 6621,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6640,
											"end": 6644,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 6637,
											"end": 6638,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6630,
											"end": 6645,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6668,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6654,
											"end": 6669,
											"name": "REVERT",
											"source": 6
										}
									],
									".data": {
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IBEP20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {BEP20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-BEP20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of BEP20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IBEP20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"farm/token/BEP20.sol\":\"BEP20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"farm/interfaces/IBEP20.sol\":{\"keccak256\":\"0xfe677ab1ec28d2dcd54f8e4933c9b53542ff3e60b6f5dfd56d58e671b4bf8959\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b544c8ba83be8de1e26f8c5b43e7c941ba0773048122831144cfbbcaa152a675\",\"dweb:/ipfs/QmSNVvJ8SrKXyqJ8wkqnNudegjDFkx1QFQFeXkAnUDDKtU\"]},\"farm/libraries/Address.sol\":{\"keccak256\":\"0xfebb27f1f403898e2f9f8f6948b88632ab84d4b1cb82c535e5907588b8a1a0b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80598ad995e6b420fcb04919b4c0504e72a4fba39f6da86d339644faa31c5f99\",\"dweb:/ipfs/QmRD6kfjet5SAB3ZCustCXQphagSuGUtwpEXiJ6Vue6TTE\"]},\"farm/libraries/SafeMath.sol\":{\"keccak256\":\"0x9ed09430799b39e964ba0a2c16d93e6ef107338413cdbdbc2837ee7440706447\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e941b0d3fdbd6e8c803ff762c6ff4aef6a0c3cb4023ffd939c6f7fec138f2d0\",\"dweb:/ipfs/QmXsbw7m5SrbYvYkP8wRRu1zcVGJbj7m6xwnWg2XbugLLA\"]},\"farm/token/BEP20.sol\":{\"keccak256\":\"0x42a14adbc50560a8b1c3ca1a4a9f59a19d950e24b19823dafe351d025cf73d97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05d72e6c39aa1922b87c2c266661f5ba790e89275a38208429bb4ee031b046b8\",\"dweb:/ipfs/QmXVdEEzRP1XUbBnhvmsUKKTPh78jXrkL9sM5qUaQ1oyhE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "farm/token/BEP20.sol:BEP20",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 732,
								"contract": "farm/token/BEP20.sol:BEP20",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 738,
								"contract": "farm/token/BEP20.sol:BEP20",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 740,
								"contract": "farm/token/BEP20.sol:BEP20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 742,
								"contract": "farm/token/BEP20.sol:BEP20",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 744,
								"contract": "farm/token/BEP20.sol:BEP20",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 746,
								"contract": "farm/token/BEP20.sol:BEP20",
								"label": "_decimals",
								"offset": 0,
								"slot": "6",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"farm/interfaces/IBEP20.sol": {
				"ast": {
					"absolutePath": "farm/interfaces/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							235
						]
					},
					"id": 236,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 235,
							"linearizedBaseContracts": [
								235
							],
							"name": "IBEP20",
							"nameLocation": "73:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "87:68:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "170:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "181:2:2"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "207:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "207:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "206:9:2"
									},
									"scope": 235,
									"src": "161:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "224:53:2",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 148,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "292:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "300:2:2"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "326:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 145,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "326:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "325:7:2"
									},
									"scope": 235,
									"src": "283:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "341:51:2",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "407:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "413:2:2"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "439:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 151,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "439:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "438:15:2"
									},
									"scope": 235,
									"src": "398:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "462:49:2",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 160,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "526:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "530:2:2"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "556:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 157,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "556:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "555:15:2"
									},
									"scope": 235,
									"src": "517:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "579:54:2",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "648:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "656:2:2"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "682:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "681:9:2"
									},
									"scope": 235,
									"src": "639:52:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "699:74:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "788:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "806:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "798:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "797:17:2"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "838:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:9:2"
									},
									"scope": 235,
									"src": "779:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "855:215:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1085:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1102:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "1094:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1121:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "1113:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:35:2"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "1147:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 181,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1147:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1146:6:2"
									},
									"scope": 235,
									"src": "1076:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "1161:270:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 194,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1446:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1464:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "1456:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1456:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1480:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "1472:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1472:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1455:33:2"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "1512:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1512:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1511:9:2"
									},
									"scope": 235,
									"src": "1437:84:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "1529:655:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 204,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2199:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2215:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2207:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2232:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2224:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2224:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2206:33:2"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2258:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 201,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2258:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2257:6:2"
									},
									"scope": 235,
									"src": "2190:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "2272:304:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2591:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2622:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "2614:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2614:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2647:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "2639:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2639:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2675:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "2667:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2603:85:2"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "2707:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2707:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2706:6:2"
									},
									"scope": 235,
									"src": "2582:131:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "2721:163:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 225,
									"name": "Transfer",
									"nameLocation": "2896:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2921:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "2905:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2905:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2943:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "2927:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2927:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2955:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "2947:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2947:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2904:57:2"
									},
									"src": "2890:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "2970:151:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 234,
									"name": "Approval",
									"nameLocation": "3133:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3158:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "3142:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3142:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3181:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "3165:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3198:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "3190:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3190:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3141:63:2"
									},
									"src": "3127:78:2"
								}
							],
							"scope": 236,
							"src": "63:3145:2",
							"usedErrors": []
						}
					],
					"src": "35:3175:2"
				},
				"id": 2
			},
			"farm/libraries/Address.sol": {
				"ast": {
					"absolutePath": "farm/libraries/Address.sol",
					"exportedSymbols": {
						"Address": [
							439
						]
					},
					"id": 440,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 237,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "63:69:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 439,
							"linearizedBaseContracts": [
								439
							],
							"name": "Address",
							"nameLocation": "142:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "810:575:3",
										"statements": [
											{
												"assignments": [
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "codehash",
														"nameLocation": "1074:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "1066:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 246,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1066:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 248,
												"nodeType": "VariableDeclarationStatement",
												"src": "1066:16:3"
											},
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"mutability": "mutable",
														"name": "accountHash",
														"nameLocation": "1101:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "1093:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 249,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1093:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 252,
												"initialValue": {
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1115:66:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1093:88:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1258:58:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1273:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1297:7:3"
																	}
																],
																"functionName": {
																	"name": "extcodehash",
																	"nodeType": "YulIdentifier",
																	"src": "1285:11:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1285:20:3"
															},
															"variableNames": [
																{
																	"name": "codehash",
																	"nodeType": "YulIdentifier",
																	"src": "1273:8:3"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 241,
														"isOffset": false,
														"isSlot": false,
														"src": "1297:7:3",
														"valueSize": 1
													},
													{
														"declaration": 247,
														"isOffset": false,
														"isSlot": false,
														"src": "1273:8:3",
														"valueSize": 1
													}
												],
												"id": 253,
												"nodeType": "InlineAssembly",
												"src": "1249:67:3"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 254,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "1334:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 255,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "1346:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1334:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 257,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "1361:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "307830",
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1373:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "1361:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1334:42:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 261,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1333:44:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 245,
												"id": 262,
												"nodeType": "Return",
												"src": "1326:51:3"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "157:581:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "753:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "772:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "764:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "764:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "763:17:3"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "804:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 243,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "804:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:6:3"
									},
									"scope": 439,
									"src": "744:641:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "2391:324:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 275,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2418:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$439",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$439",
																				"typeString": "library Address"
																			}
																		],
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2410:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 273,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2410:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2410:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2410:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 278,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "2435:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2410:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2443:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 272,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2402:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2402:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "2402:73:3"
											},
											{
												"assignments": [
													284,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 284,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2572:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 297,
														"src": "2567:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 283,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2567:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 291,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2615:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 285,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "2585:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2585:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 287,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "2607:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2585:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2585:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2566:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 293,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "2637:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2646:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 292,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2629:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2629:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "2629:78:3"
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "1393:921:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2329:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2355:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "2339:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2339:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2374:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "2366:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2366:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2338:43:3"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2391:0:3"
									},
									"scope": 439,
									"src": "2320:395:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "3565:86:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 309,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "3596:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 310,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "3604:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3610:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 308,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															315,
															335
														],
														"referencedDeclaration": 335,
														"src": "3583:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 307,
												"id": 313,
												"nodeType": "Return",
												"src": "3576:67:3"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "2723:747:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3485:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3506:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "3498:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3498:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3527:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "3514:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3514:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3497:35:3"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "3551:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 305,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3551:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:14:3"
									},
									"scope": 439,
									"src": "3476:175:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "4032:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 328,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "4073:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 329,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "4081:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4087:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 331,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "4090:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 327,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "4050:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4050:53:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 326,
												"id": 333,
												"nodeType": "Return",
												"src": "4043:60:3"
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "3659:216:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3890:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3921:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "3913:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3913:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3951:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "3938:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 319,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3938:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3980:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "3966:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3966:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3902:97:3"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "4018:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 324,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4018:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4017:14:3"
									},
									"scope": 439,
									"src": "3881:230:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "4633:113:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 348,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "4673:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 349,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "4681:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 350,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "4687:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4694:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 347,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															355,
															388
														],
														"referencedDeclaration": 388,
														"src": "4651:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4651:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 346,
												"id": 353,
												"nodeType": "Return",
												"src": "4644:94:3"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "4119:361:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4495:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4535:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "4527:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4527:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4565:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "4552:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4552:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4588:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "4580:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4580:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4516:84:3"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "4619:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 344,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4619:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4618:14:3"
									},
									"scope": 439,
									"src": "4486:260:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "5186:175:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 372,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5213:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$439",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$439",
																				"typeString": "library Address"
																			}
																		],
																		"id": 371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5205:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 370,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5205:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5205:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5205:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 375,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "5230:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5205:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5237:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 369,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5197:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5197:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5197:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 381,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "5319:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 382,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "5327:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 383,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "5333:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 384,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "5340:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 380,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "5296:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5296:57:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 368,
												"id": 386,
												"nodeType": "Return",
												"src": "5289:64:3"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "4754:242:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5011:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5051:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "5043:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5043:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5081:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "5068:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 359,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5068:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5104:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "5096:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5096:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5134:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "5120:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 363,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5120:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5032:121:3"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "5172:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 366,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5172:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5171:14:3"
									},
									"scope": 439,
									"src": "5002:359:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "5556:833:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 403,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "5586:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 402,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "5575:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5575:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5595:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 401,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5567:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5567:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "5567:60:3"
											},
											{
												"assignments": [
													409,
													411
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5706:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 437,
														"src": "5701:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 408,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5701:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 411,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5728:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 437,
														"src": "5715:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 410,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5715:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 418,
												"initialValue": {
													"arguments": [
														{
															"id": 416,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "5771:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 412,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "5742:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5742:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 414,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "5761:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5742:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5742:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5700:76:3"
											},
											{
												"condition": {
													"id": 419,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 409,
													"src": "5791:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 435,
													"nodeType": "Block",
													"src": "5850:532:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 423,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "5936:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5936:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5956:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5936:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 433,
																"nodeType": "Block",
																"src": "6316:55:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 430,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 396,
																					"src": "6342:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 429,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "6335:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6335:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 432,
																		"nodeType": "ExpressionStatement",
																		"src": "6335:20:3"
																	}
																]
															},
															"id": 434,
															"nodeType": "IfStatement",
															"src": "5932:439:3",
															"trueBody": {
																"id": 428,
																"nodeType": "Block",
																"src": "5959:351:3",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "6147:148:3",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "6170:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "6199:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "6193:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6193:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "6174:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6243:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "6247:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6239:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6239:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "6260:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "6232:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6232:44:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6232:44:3"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 411,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6199:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 411,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6247:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 427,
																		"nodeType": "InlineAssembly",
																		"src": "6138:157:3"
																	}
																]
															}
														}
													]
												},
												"id": 436,
												"nodeType": "IfStatement",
												"src": "5787:595:3",
												"trueBody": {
													"id": 422,
													"nodeType": "Block",
													"src": "5800:44:3",
													"statements": [
														{
															"expression": {
																"id": 420,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "5822:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 400,
															"id": 421,
															"nodeType": "Return",
															"src": "5815:17:3"
														}
													]
												}
											}
										]
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nameLocation": "5378:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5419:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "5411:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5411:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5449:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "5436:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 391,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5436:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "weiValue",
												"nameLocation": "5472:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "5464:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5464:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5505:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "5491:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 395,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5491:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5400:124:3"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "5542:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5542:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5541:14:3"
									},
									"scope": 439,
									"src": "5369:1020:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 440,
							"src": "134:6258:3",
							"usedErrors": []
						}
					],
					"src": "35:6359:3"
				},
				"id": 3
			},
			"farm/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "farm/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							708
						]
					},
					"id": 709,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 441,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 442,
								"nodeType": "StructuredDocumentation",
								"src": "63:575:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 708,
							"linearizedBaseContracts": [
								708
							],
							"name": "SafeMath",
							"nameLocation": "648:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "970:114:4",
										"statements": [
											{
												"assignments": [
													453
												],
												"declarations": [
													{
														"constant": false,
														"id": 453,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "989:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 467,
														"src": "981:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 452,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 457,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 454,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "993:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 455,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "997:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "993:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "981:17:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 459,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "1017:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 460,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "1022:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1017:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1025:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 458,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1009:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1009:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 464,
												"nodeType": "ExpressionStatement",
												"src": "1009:46:4"
											},
											{
												"expression": {
													"id": 465,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 453,
													"src": "1075:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 451,
												"id": 466,
												"nodeType": "Return",
												"src": "1068:8:4"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "664:233:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "912:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "924:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "916:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "935:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "927:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "927:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "915:22:4"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "961:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "961:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "960:9:4"
									},
									"scope": 708,
									"src": "903:181:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "1434:69:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 479,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "1456:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 480,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "1459:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1462:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 478,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															485,
															513
														],
														"referencedDeclaration": 513,
														"src": "1452:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1452:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 477,
												"id": 483,
												"nodeType": "Return",
												"src": "1445:50:4"
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "1092:269:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1376:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1388:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1380:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1380:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1399:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1391:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1391:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1379:22:4"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1425:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1424:9:4"
									},
									"scope": 708,
									"src": "1367:136:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "1935:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 498,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 490,
																"src": "1954:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 499,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 488,
																"src": "1959:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1954:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 501,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "1962:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 497,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1946:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1946:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "1946:29:4"
											},
											{
												"assignments": [
													505
												],
												"declarations": [
													{
														"constant": false,
														"id": 505,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1994:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 512,
														"src": "1986:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 504,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1986:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 509,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 506,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "1998:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 507,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "2002:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1998:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1986:17:4"
											},
											{
												"expression": {
													"id": 510,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 505,
													"src": "2023:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 496,
												"id": 511,
												"nodeType": "Return",
												"src": "2016:8:4"
											}
										]
									},
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "1511:289:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1815:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1837:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1829:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1857:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1849:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1849:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1883:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1869:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 491,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1869:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1818:84:4"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1925:9:4"
									},
									"scope": 708,
									"src": "1806:226:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "2358:404:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 523,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "2594:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2599:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2594:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 529,
												"nodeType": "IfStatement",
												"src": "2590:47:4",
												"trueBody": {
													"id": 528,
													"nodeType": "Block",
													"src": "2602:35:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2624:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 522,
															"id": 527,
															"nodeType": "Return",
															"src": "2617:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													531
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2657:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 547,
														"src": "2649:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 530,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2649:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 535,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 532,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "2661:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 533,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "2665:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2661:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2649:17:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 537,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "2685:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 538,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "2689:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2685:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 540,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 518,
																"src": "2694:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2685:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2697:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 536,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2677:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2677:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "2677:56:4"
											},
											{
												"expression": {
													"id": 545,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 531,
													"src": "2753:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 522,
												"id": 546,
												"nodeType": "Return",
												"src": "2746:8:4"
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "2040:245:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "2300:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2312:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "2304:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2304:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2323:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "2315:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2315:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2303:22:4"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "2349:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2349:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2348:9:4"
									},
									"scope": 708,
									"src": "2291:471:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "3305:65:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 559,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "3327:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 560,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "3330:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3333:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 558,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															565,
															593
														],
														"referencedDeclaration": 593,
														"src": "3323:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3323:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 557,
												"id": 563,
												"nodeType": "Return",
												"src": "3316:46:4"
											}
										]
									},
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "2770:462:4",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3247:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3259:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "3251:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3251:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3270:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "3262:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3250:22:4"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "3296:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3296:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3295:9:4"
									},
									"scope": 708,
									"src": "3238:132:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "3995:183:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 578,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "4014:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4018:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4014:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 581,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "4021:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 577,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4006:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4006:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "4006:28:4"
											},
											{
												"assignments": [
													585
												],
												"declarations": [
													{
														"constant": false,
														"id": 585,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "4053:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 592,
														"src": "4045:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 584,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4045:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 589,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "4057:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 587,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "4061:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4057:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4045:17:4"
											},
											{
												"expression": {
													"id": 590,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 585,
													"src": "4169:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 576,
												"id": 591,
												"nodeType": "Return",
												"src": "4162:8:4"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "3378:482:4",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3875:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3897:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3889:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3889:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3917:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3909:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3909:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3943:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3929:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 571,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3929:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3878:84:4"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3986:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3986:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:9:4"
									},
									"scope": 708,
									"src": "3866:312:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "4710:63:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 604,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "4732:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 605,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "4735:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4738:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 603,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															610,
															634
														],
														"referencedDeclaration": 634,
														"src": "4728:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4728:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 602,
												"id": 608,
												"nodeType": "Return",
												"src": "4721:44:4"
											}
										]
									},
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "4186:451:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4652:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4664:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "4656:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4656:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4675:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "4667:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4667:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4655:22:4"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "4701:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4700:9:4"
									},
									"scope": 708,
									"src": "4643:130:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 633,
										"nodeType": "Block",
										"src": "5387:71:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 623,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "5406:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5411:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5406:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 626,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "5414:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 622,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5398:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5398:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "5398:29:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 629,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "5445:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 630,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "5449:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5445:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 621,
												"id": 632,
												"nodeType": "Return",
												"src": "5438:12:4"
											}
										]
									},
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "4781:471:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "5267:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5289:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "5281:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5281:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5309:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "5301:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5301:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5335:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "5321:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 616,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5321:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5270:84:4"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "5378:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5378:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5377:9:4"
									},
									"scope": 708,
									"src": "5258:200:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "5535:36:4",
										"statements": [
											{
												"expression": {
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 643,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "5546:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 644,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 636,
																"src": "5550:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 645,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "5554:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5550:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"id": 648,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "5562:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "5550:13:4",
														"trueExpression": {
															"id": 647,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "5558:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5546:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "5546:17:4"
											}
										]
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "5475:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5487:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "5479:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5479:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5498:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "5490:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5490:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5478:22:4"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "5532:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "5524:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5524:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5523:11:4"
									},
									"scope": 708,
									"src": "5466:105:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "5748:253:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 660,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "5763:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 661,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5767:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "5763:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 696,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "5954:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5959:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5954:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 704,
													"nodeType": "IfStatement",
													"src": "5950:44:4",
													"trueBody": {
														"id": 703,
														"nodeType": "Block",
														"src": "5962:32:4",
														"statements": [
															{
																"expression": {
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 699,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 658,
																		"src": "5977:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5981:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "5977:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 702,
																"nodeType": "ExpressionStatement",
																"src": "5977:5:4"
															}
														]
													}
												},
												"id": 705,
												"nodeType": "IfStatement",
												"src": "5759:235:4",
												"trueBody": {
													"id": 695,
													"nodeType": "Block",
													"src": "5770:174:4",
													"statements": [
														{
															"expression": {
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 663,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "5785:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 664,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "5789:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5785:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 666,
															"nodeType": "ExpressionStatement",
															"src": "5785:5:4"
														},
														{
															"assignments": [
																668
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 668,
																	"mutability": "mutable",
																	"name": "x",
																	"nameLocation": "5813:1:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 695,
																	"src": "5805:9:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 667,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5805:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 674,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 669,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 655,
																		"src": "5817:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5821:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "5817:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5825:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5817:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5805:21:4"
														},
														{
															"body": {
																"id": 693,
																"nodeType": "Block",
																"src": "5855:78:4",
																"statements": [
																	{
																		"expression": {
																			"id": 680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 678,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 658,
																				"src": "5874:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 679,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 668,
																				"src": "5878:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5874:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 681,
																		"nodeType": "ExpressionStatement",
																		"src": "5874:5:4"
																	},
																	{
																		"expression": {
																			"id": 691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 682,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 668,
																				"src": "5898:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 687,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 685,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 683,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 655,
																									"src": "5903:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"id": 684,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 668,
																									"src": "5907:1:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "5903:5:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 686,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 668,
																								"src": "5911:1:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "5903:9:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 688,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "5902:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 689,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5916:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "5902:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5898:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 692,
																		"nodeType": "ExpressionStatement",
																		"src": "5898:19:4"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 675,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 668,
																	"src": "5848:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 676,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "5852:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5848:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 694,
															"nodeType": "WhileStatement",
															"src": "5841:92:4"
														}
													]
												}
											}
										]
									},
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "5698:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5711:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "5703:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5703:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5702:11:4"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "5745:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "5737:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5736:11:4"
									},
									"scope": 708,
									"src": "5689:312:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 709,
							"src": "640:5364:4",
							"usedErrors": []
						}
					],
					"src": "35:5971:4"
				},
				"id": 4
			},
			"farm/token/BEP20.sol": {
				"ast": {
					"absolutePath": "farm/token/BEP20.sol",
					"exportedSymbols": {
						"Address": [
							439
						],
						"BEP20": [
							1235
						],
						"Context": [
							134
						],
						"IBEP20": [
							235
						],
						"Ownable": [
							112
						],
						"SafeMath": [
							708
						]
					},
					"id": 1236,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 710,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:5"
						},
						{
							"absolutePath": "farm/interfaces/IBEP20.sol",
							"file": "../interfaces/IBEP20.sol",
							"id": 711,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1236,
							"sourceUnit": 236,
							"src": "63:34:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 712,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1236,
							"sourceUnit": 113,
							"src": "99:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 713,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1236,
							"sourceUnit": 135,
							"src": "153:51:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "farm/libraries/SafeMath.sol",
							"file": "../libraries/SafeMath.sol",
							"id": 714,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1236,
							"sourceUnit": 709,
							"src": "206:35:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "farm/libraries/Address.sol",
							"file": "../libraries/Address.sol",
							"id": 715,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1236,
							"sourceUnit": 440,
							"src": "243:34:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 717,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "1486:7:5"
									},
									"id": 718,
									"nodeType": "InheritanceSpecifier",
									"src": "1486:7:5"
								},
								{
									"baseName": {
										"id": 719,
										"name": "IBEP20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 235,
										"src": "1495:6:5"
									},
									"id": 720,
									"nodeType": "InheritanceSpecifier",
									"src": "1495:6:5"
								},
								{
									"baseName": {
										"id": 721,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "1503:7:5"
									},
									"id": 722,
									"nodeType": "InheritanceSpecifier",
									"src": "1503:7:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 716,
								"nodeType": "StructuredDocumentation",
								"src": "281:1185:5",
								"text": " @dev Implementation of the {IBEP20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {BEP20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-BEP20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of BEP20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IBEP20-approve}."
							},
							"fullyImplemented": true,
							"id": 1235,
							"linearizedBaseContracts": [
								1235,
								112,
								235,
								134
							],
							"name": "BEP20",
							"nameLocation": "1477:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 725,
									"libraryName": {
										"id": 723,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 708,
										"src": "1524:8:5"
									},
									"nodeType": "UsingForDirective",
									"src": "1518:27:5",
									"typeName": {
										"id": 724,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1537:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 728,
									"libraryName": {
										"id": 726,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 439,
										"src": "1557:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "1551:26:5",
									"typeName": {
										"id": 727,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1569:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 732,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1621:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1235,
									"src": "1585:45:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 731,
										"keyType": {
											"id": 729,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1593:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1585:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 730,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1604:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 738,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1695:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1235,
									"src": "1639:67:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 737,
										"keyType": {
											"id": 733,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1647:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1639:47:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 736,
											"keyType": {
												"id": 734,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1666:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1658:27:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 735,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1677:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 740,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1731:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1235,
									"src": "1715:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 739,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1715:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 742,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1767:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1235,
									"src": "1752:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 741,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1752:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 744,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1794:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1235,
									"src": "1779:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 743,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1779:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 746,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "1822:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1235,
									"src": "1808:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 745,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1808:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "2221:85:5",
										"statements": [
											{
												"expression": {
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 754,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "2232:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 755,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "2240:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2232:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "2232:13:5"
											},
											{
												"expression": {
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 758,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "2256:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 759,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "2266:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2256:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "2256:17:5"
											},
											{
												"expression": {
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 762,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "2284:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2296:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "2284:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "2284:14:5"
											}
										]
									},
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "1840:319:5",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 767,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2191:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2177:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 748,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2177:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2212:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2198:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 750,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2198:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2176:44:5"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2221:0:5"
									},
									"scope": 1235,
									"src": "2165:141:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										166
									],
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "2435:33:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 774,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "2453:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2453:7:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 773,
												"id": 776,
												"nodeType": "Return",
												"src": "2446:14:5"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "2314:54:5",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "2383:8:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 770,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2403:8:5"
									},
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2391:2:5"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "2426:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2425:9:5"
									},
									"scope": 1235,
									"src": "2374:94:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										160
									],
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "2592:31:5",
										"statements": [
											{
												"expression": {
													"id": 785,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 742,
													"src": "2610:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 784,
												"id": 786,
												"nodeType": "Return",
												"src": "2603:12:5"
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "2476:49:5",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2540:4:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 781,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2554:8:5"
									},
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2544:2:5"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "2577:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 782,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2577:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2576:15:5"
									},
									"scope": 1235,
									"src": "2531:92:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										148
									],
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "2747:35:5",
										"statements": [
											{
												"expression": {
													"id": 795,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 746,
													"src": "2765:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 794,
												"id": 796,
												"nodeType": "Return",
												"src": "2758:16:5"
											}
										]
									},
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "2631:53:5",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2699:8:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 791,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2717:8:5"
									},
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2707:2:5"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "2740:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 792,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2740:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:7:5"
									},
									"scope": 1235,
									"src": "2690:92:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										154
									],
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "2910:33:5",
										"statements": [
											{
												"expression": {
													"id": 805,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 744,
													"src": "2928:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 804,
												"id": 806,
												"nodeType": "Return",
												"src": "2921:14:5"
											}
										]
									},
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "2790:51:5",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2856:6:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 801,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2872:8:5"
									},
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2862:2:5"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "2895:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 802,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2895:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:15:5"
									},
									"scope": 1235,
									"src": "2847:96:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										142
									],
									"body": {
										"id": 817,
										"nodeType": "Block",
										"src": "3069:38:5",
										"statements": [
											{
												"expression": {
													"id": 815,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 740,
													"src": "3087:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 814,
												"id": 816,
												"nodeType": "Return",
												"src": "3080:19:5"
											}
										]
									},
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "2951:50:5",
										"text": " @dev See {BEP20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3016:11:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 811,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3037:8:5"
									},
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3027:2:5"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "3060:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3060:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3059:9:5"
									},
									"scope": 1235,
									"src": "3007:100:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										174
									],
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "3244:44:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 827,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "3262:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 829,
													"indexExpression": {
														"id": 828,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "3272:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3262:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 826,
												"id": 830,
												"nodeType": "Return",
												"src": "3255:25:5"
											}
										]
									},
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "3115:48:5",
										"text": " @dev See {BEP20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3178:9:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 823,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3212:8:5"
									},
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3196:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "3188:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3188:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3187:17:5"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "3235:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3235:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3234:9:5"
									},
									"scope": 1235,
									"src": "3169:119:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										184
									],
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "3584:83:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 844,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "3605:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3605:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 846,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "3619:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 847,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "3630:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 843,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "3595:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3595:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 849,
												"nodeType": "ExpressionStatement",
												"src": "3595:42:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3655:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 842,
												"id": 851,
												"nodeType": "Return",
												"src": "3648:11:5"
											}
										]
									},
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "3296:198:5",
										"text": " @dev See {BEP20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3509:8:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 839,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3560:8:5"
									},
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3526:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "3518:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3545:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "3537:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3537:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:35:5"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "3578:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 840,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3578:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3577:6:5"
									},
									"scope": 1235,
									"src": "3500:167:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										194
									],
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "3819:53:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 864,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "3837:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 866,
														"indexExpression": {
															"id": 865,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "3849:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3837:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 868,
													"indexExpression": {
														"id": 867,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "3856:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3837:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 863,
												"id": 869,
												"nodeType": "Return",
												"src": "3830:34:5"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "3675:48:5",
										"text": " @dev See {BEP20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3738:9:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 860,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3787:8:5"
									},
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3756:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "3748:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3748:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3771:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "3763:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3763:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3747:32:5"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "3810:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3810:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3809:9:5"
									},
									"scope": 1235,
									"src": "3729:143:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										204
									],
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "4099:80:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 883,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "4119:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4119:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 885,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "4133:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 886,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "4142:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 882,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "4110:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4110:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "4110:39:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4167:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 881,
												"id": 890,
												"nodeType": "Return",
												"src": "4160:11:5"
											}
										]
									},
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "3880:132:5",
										"text": " @dev See {BEP20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4027:7:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 878,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4075:8:5"
									},
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4043:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "4035:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4035:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4060:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "4052:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4052:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4034:33:5"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "4093:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 879,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4093:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4092:6:5"
									},
									"scope": 1235,
									"src": "4018:161:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										216
									],
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "4788:259:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 906,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "4809:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 907,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "4817:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 908,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "4828:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 905,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "4799:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4799:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "4799:36:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 912,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "4869:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 913,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "4890:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4890:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 922,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 899,
																	"src": "4955:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4963:42:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 915,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 738,
																			"src": "4917:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 917,
																		"indexExpression": {
																			"id": 916,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 895,
																			"src": "4929:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4917:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 920,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 918,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 124,
																			"src": "4937:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4937:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4917:33:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 513,
																"src": "4917:37:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4917:89:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 911,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "4846:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4846:171:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "4846:171:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5035:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 904,
												"id": 928,
												"nodeType": "Return",
												"src": "5028:11:5"
											}
										]
									},
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "4187:457:5",
										"text": " @dev See {BEP20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {BEP20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4659:12:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 901,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4764:8:5"
									},
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4690:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "4682:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4682:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4715:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "4707:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4707:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4743:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "4735:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4671:85:5"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "4782:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 902,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4782:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4781:6:5"
									},
									"scope": 1235,
									"src": "4650:397:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "5541:124:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 941,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "5561:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5561:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 943,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "5575:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 951,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 935,
																	"src": "5623:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 944,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 738,
																			"src": "5584:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 947,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 945,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 124,
																				"src": "5596:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5596:12:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5584:25:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 949,
																	"indexExpression": {
																		"id": 948,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 933,
																		"src": "5610:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5584:34:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 468,
																"src": "5584:38:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5584:50:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 940,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "5552:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5552:83:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "5552:83:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5653:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 939,
												"id": 956,
												"nodeType": "Return",
												"src": "5646:11:5"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "5055:394:5",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5464:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5490:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "5482:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5482:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5507:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "5499:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5499:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5481:37:5"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "5535:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 937,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5535:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5534:6:5"
									},
									"scope": 1235,
									"src": "5455:210:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "6258:220:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 969,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "6292:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6292:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 971,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "6319:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 979,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 963,
																	"src": "6380:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6397:39:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 972,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 738,
																			"src": "6341:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 975,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 973,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 124,
																				"src": "6353:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 974,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6353:12:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6341:25:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 977,
																	"indexExpression": {
																		"id": 976,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 961,
																		"src": "6367:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6341:34:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 513,
																"src": "6341:38:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6341:96:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 968,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "6269:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6269:179:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 983,
												"nodeType": "ExpressionStatement",
												"src": "6269:179:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6466:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 967,
												"id": 985,
												"nodeType": "Return",
												"src": "6459:11:5"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "5673:488:5",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6176:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6202:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "6194:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6194:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6219:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "6211:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6211:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6193:42:5"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "6252:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 965,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6252:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6251:6:5"
									},
									"scope": 1235,
									"src": "6167:311:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "6766:68:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 998,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "6783:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6783:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1000,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "6797:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 997,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "6777:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6777:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "6777:27:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6822:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 996,
												"id": 1004,
												"nodeType": "Return",
												"src": "6815:11:5"
											}
										]
									},
									"documentation": {
										"id": 988,
										"nodeType": "StructuredDocumentation",
										"src": "6486:204:5",
										"text": " @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n the total supply.\n Requirements\n - `msg.sender` must be the token owner"
									},
									"functionSelector": "a0712d68",
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 993,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 992,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "6741:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "6741:9:5"
										}
									],
									"name": "mint",
									"nameLocation": "6705:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6718:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "6710:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6710:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6709:16:5"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "6760:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 994,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6760:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6759:6:5"
									},
									"scope": 1235,
									"src": "6696:138:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "7437:392:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1017,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1009,
																"src": "7456:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7474:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7466:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1018,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7466:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7466:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7456:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7478:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 1016,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7448:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7448:70:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "7448:70:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1027,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1011,
																"src": "7537:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7558:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7550:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1028,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7550:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7550:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7537:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7562:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 1026,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7529:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7529:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "7529:71:5"
											},
											{
												"expression": {
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1036,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "7613:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1038,
														"indexExpression": {
															"id": 1037,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "7623:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7613:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1043,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1013,
																"src": "7655:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7663:40:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1039,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 732,
																	"src": "7633:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1041,
																"indexExpression": {
																	"id": 1040,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1009,
																	"src": "7643:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7633:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 513,
															"src": "7633:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7633:71:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7613:91:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "7613:91:5"
											},
											{
												"expression": {
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1048,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "7715:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1050,
														"indexExpression": {
															"id": 1049,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "7725:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7715:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1055,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1013,
																"src": "7763:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1051,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 732,
																	"src": "7738:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1053,
																"indexExpression": {
																	"id": 1052,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1011,
																	"src": "7748:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7738:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 468,
															"src": "7738:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1056,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7738:32:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7715:55:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "7715:55:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1060,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "7795:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1061,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "7803:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1062,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "7814:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1059,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "7786:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7786:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "EmitStatement",
												"src": "7781:40:5"
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "6842:476:5",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7333:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7361:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "7353:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7353:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7386:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "7378:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7378:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7414:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "7406:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7406:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7342:85:5"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7437:0:5"
									},
									"scope": 1235,
									"src": "7324:505:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1111,
										"nodeType": "Block",
										"src": "8167:251:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1075,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "8186:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8205:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8197:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1076,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8197:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8197:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8186:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8209:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 1074,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8178:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8178:65:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "8178:65:5"
											},
											{
												"expression": {
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1084,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "8256:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1087,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1071,
																"src": "8288:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1085,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "8271:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 468,
															"src": "8271:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8271:24:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8256:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "8256:39:5"
											},
											{
												"expression": {
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1091,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "8306:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1093,
														"indexExpression": {
															"id": 1092,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "8316:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8306:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1098,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1071,
																"src": "8350:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1094,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 732,
																	"src": "8327:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1096,
																"indexExpression": {
																	"id": 1095,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "8337:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8327:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 468,
															"src": "8327:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8327:30:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8306:51:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "8306:51:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8390:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8382:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1103,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8382:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1107,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "8394:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1108,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "8403:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1102,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "8373:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8373:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1110,
												"nodeType": "EmitStatement",
												"src": "8368:42:5"
											}
										]
									},
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "7837:267:5",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 1112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8119:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8133:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "8125:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8125:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8150:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "8142:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8142:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8124:33:5"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:5"
									},
									"scope": 1235,
									"src": "8110:308:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "8807:291:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1121,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "8826:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8845:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8837:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1122,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8837:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8837:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8826:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8849:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 1120,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8818:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8818:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "8818:67:5"
											},
											{
												"expression": {
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1130,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "8898:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1132,
														"indexExpression": {
															"id": 1131,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "8908:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8898:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1137,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "8942:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8950:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1133,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 732,
																	"src": "8919:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1135,
																"indexExpression": {
																	"id": 1134,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "8929:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8919:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 513,
															"src": "8919:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8919:68:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8898:89:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "8898:89:5"
											},
											{
												"expression": {
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1142,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "8998:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1145,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "9030:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1143,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "9013:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 485,
															"src": "9013:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9013:24:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8998:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1148,
												"nodeType": "ExpressionStatement",
												"src": "8998:39:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1150,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "9062:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9079:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9071:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1151,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9071:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9071:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1155,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "9083:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1149,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "9053:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9053:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1157,
												"nodeType": "EmitStatement",
												"src": "9048:42:5"
											}
										]
									},
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "8426:318:5",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8759:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8773:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "8765:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8765:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8790:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "8782:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8782:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8764:33:5"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8807:0:5"
									},
									"scope": 1235,
									"src": "8750:348:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "9647:263:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1170,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "9666:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9683:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9675:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1171,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9675:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9675:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9666:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9687:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 1169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9658:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9658:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "9658:68:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1180,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1164,
																"src": "9745:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9764:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9756:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1181,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9756:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9756:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9745:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9768:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 1179,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9737:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9737:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "9737:68:5"
											},
											{
												"expression": {
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1189,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "9818:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1192,
															"indexExpression": {
																"id": 1190,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "9830:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9818:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1193,
														"indexExpression": {
															"id": 1191,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "9837:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9818:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1194,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "9848:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9818:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1196,
												"nodeType": "ExpressionStatement",
												"src": "9818:36:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1198,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "9879:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1199,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "9886:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1200,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "9895:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1197,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "9870:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9870:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1202,
												"nodeType": "EmitStatement",
												"src": "9865:37:5"
											}
										]
									},
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "9106:426:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9547:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9574:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "9566:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9566:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9598:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "9590:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9590:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9624:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "9616:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9616:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9555:82:5"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9647:0:5"
									},
									"scope": 1235,
									"src": "9538:372:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1233,
										"nodeType": "Block",
										"src": "10157:221:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1213,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1207,
															"src": "10174:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1214,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "10183:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1212,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "10168:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10168:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1216,
												"nodeType": "ExpressionStatement",
												"src": "10168:22:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1218,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1207,
															"src": "10224:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1219,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "10246:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10246:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1228,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1209,
																	"src": "10312:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10320:38:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1221,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 738,
																			"src": "10273:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1223,
																		"indexExpression": {
																			"id": 1222,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1207,
																			"src": "10285:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10273:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1226,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1224,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 124,
																			"src": "10294:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10294:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10273:34:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 513,
																"src": "10273:38:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10273:86:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1217,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "10201:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10201:169:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1232,
												"nodeType": "ExpressionStatement",
												"src": "10201:169:5"
											}
										]
									},
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "9918:172:5",
										"text": " @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n from the caller's allowance.\n See {_burn} and {_approve}."
									},
									"id": 1234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nameLocation": "10105:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10123:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "10115:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10115:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10140:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "10132:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10132:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10114:33:5"
									},
									"returnParameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10157:0:5"
									},
									"scope": 1235,
									"src": "10096:282:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1236,
							"src": "1468:8913:5",
							"usedErrors": []
						}
					],
					"src": "35:10348:5"
				},
				"id": 5
			}
		}
	}
}